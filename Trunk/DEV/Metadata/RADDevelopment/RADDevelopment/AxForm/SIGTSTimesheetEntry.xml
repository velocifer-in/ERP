<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SIGTSTimesheetEntry</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SIGTSTimesheetEntry extends FormRun implements TSITimesheetEntry, TSIRegister, TSIFormRefreshData, TSIParentForm
{
    #TimeConstants
    #ISOCountryRegionCodes

    ProjPeriodTimesheetWeek             projPeriodTimesheetWeek;
    ProjPeriodLine                      projPeriodLine;
    ProjParameters                      projParameters;
    RecId                               timesheetRecId;

    NoYes                               requireStartStopTime;

    boolean                             skipValidateWrite;
    boolean                             isDeletingLine;
    boolean                             createdFromEss;
    boolean                             cdsLockingOptionTimesheets;

    List                                listFormParts;
    Map                                 mapCommentsDayComboboxIndex;
    TSTimesheetChangeReasonCollection   changeReasonsCollection;

    int                                 firstDayIndex = 1;
    LabelString                         dayLabels[#daysPerWeek];

    boolean                             childDialogClosedOk;

    TSTimesheetEntryQuery               tsTimesheetEntryQuery;
    TSTimesheetEntryGridView            tsTimesheetEntryGridView;
    TSTimesheetListPageFilter           myTimesheetFilterSelection;
    ResourceRecId                       currentResourceRecId;
    boolean                             isOwnerOrDelegate;
    FormObservableLink workflowIconObservableLink = new FormObservableLink();

    // <GIN>
    boolean isTaxParametersMarked_IN;
    // </GIN>

    Map customerNameMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>refreshWorkflowIcon</Name>
				<Source><![CDATA[
    public void refreshWorkflowIcon()
    {
        TSTimesheetLine_ds.reread();
        TSTimesheetLine_ds.refresh();
        workflowIconObservableLink.markChanged();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkflowButtonForLineVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to enable/disable the timesheet line workflow button
    /// </summary>
    private void updateWorkflowButtonForLineVisibility()
    {
        var isWorkflowVisibleForLine = TSTimesheetHelper::isWorkflowVisibleForLine(tsTimesheetLine);

        TSTimesheetLineWorkflowDropDialog.visible(isWorkflowVisibleForLine);
        LineGridWorkflowImage.visible(isWorkflowVisibleForLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableWorkflowButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to enable/disable the timesheet document workflow button
    /// </summary>
    private void enableWorkflowButton()
    {
        if (TSTimesheetHelper::shouldEnableTimesheetHeaderWorkflow(TSTimesheetTable))
        {
            TSTimesheetTableWorkflowDropDialog.visible(false);
        }
        else
        {
            //Disable drop dialog menu button
            TSTimesheetTableWorkflowDropDialog.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>activateTimesheetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs logic required when a timesheet is active
    /// </summary>
    public void activateTimesheetTable()
    {
        changeReasonsCollection.clear();

        requireStartStopTime = TSResource::timesheetRequiresStartStopTime(tsTimesheetTable.Resource,projParameters);

        if (timesheetRecId != tsTimesheetTable.RecId)
        {
            this.formInitPost();
            this.setHeaderObjects();
            this.setHeaderTitleText();

            if (element.args().parmEnumType() != enumnum(TSTimesheetEntryGridView))
            {
                this.initDetailsViewOnly();
            }
        }

        timesheetRecId = tsTimesheetTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDetailsViewOnly</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Intended for initializing the form when switching to details view.
    /// </summary>
    private void initDetailsViewOnly()
    {
        TSPolicyEvalEngine::showPolicyViolationsInfo(tsTimesheetTable);
        TSTimesheetTable::checkHours(tsTimesheetTable.TimesheetNbr, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowHeaderFieldEdit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables resource and period fields for editing.
    /// </summary>
    /// <param name = "enable">
    ///    A Boolean value that defines if the fields must be enabled for editing.
    /// </param>
    public void allowHeaderFieldEdit(boolean _enable = true)
    {
        // resource
        Resource_LineViewHeader.allowEdit(_enable);
        Resource_HeaderDetails.allowEdit(_enable);

        // period
        PeriodDateRange_LineViewHeader.allowEdit(_enable);
        PeriodDateRange_HeaderDetails.allowEdit(_enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubmitToWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the current timesheet can be submitted to workflow.
    /// </summary>
    /// <returns>
    ///    true if the current timesheet can be submitted to workflow; otherwise, false.
    /// </returns>
    public boolean canSubmitToWorkflow()
    {
        return  TSTimesheetHelper::canSubmitTimesheetToWorkflow(TSTimesheetTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canAddDeleteHeaderLineFromEntryPoint</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the timesheet header and line can be added or removed depending on the entry point from which the form has been called.
    /// </summary>
    /// <returns>True if header and lines can be added or deleted; otherwise; false.</returns>
    public boolean canAddDeleteHeaderLineFromEntryPoint()
    {
        return tsTimesheetEntryGridView == TSTimesheetEntryGridView::AllTimesheets || tsTimesheetEntryGridView == TSTimesheetEntryGridView::MyTimesheets;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCopySelectedTimesheetFromEntryPoint</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates if a selected timesheet can be copied entirely, depending on the entry point from which the form has been called.
    /// </summary>
    /// <returns>
    ///     true if a selected timesheet can be copied; otherwise; false.
    /// </returns>
    public boolean canCopySelectedTimesheetFromEntryPoint()
    {
        return tsTimesheetEntryGridView == TSTimesheetEntryGridView::MyTimesheets;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables, shows and hides form controls.
    /// </summary>
    void formInitPost()
    {
        boolean     isEditable          = tsTimesheetTable.ApprovalStatus == TSAppStatus::Create || tsTimesheetTable.ApprovalStatus == TSAppStatus::Returned;
        boolean     useFavorites        = projParameters.UseFavorites;
        boolean     hasLineItemWorkItem = TSTimesheetHelper::recordHasLineItemApproval(tsTimesheetTable);
        boolean     canAddLine          = tsTimesheetTable.ApprovalStatus == TSAppStatus::Create && !this.inViewMode();
        boolean     canDeleteLine       = this.canDeleteLine();

        if (canAddLine && (!this.isOwnerOrDelegate() || !this.canAddDeleteHeaderLineFromEntryPoint()))
        {
            canAddLine = false;
        }

        tsTimesheetTable_ds.allowEdit(isEditable);

        // Make the header fields un-editable
        element.allowHeaderFieldEdit(false);

        startStopTime.visible(requireStartStopTime && !projParameters.TimesheetChangeReason);
        tsTimesheetAddFavorites.visible(useFavorites);
        tsTimesheetLine_ProjectDataAreaId.visible(projParameters.EnableIntercompanyTimesheet);
        myFavorites.visible(useFavorites);

        // Allow/disallow line creation depending on a timesheet status and viewEditMode
        tsTimesheetLine_ds.allowCreate(canAddLine);
        newLine.enabled(canAddLine);
        copyFrom.enabled(canAddLine);
        deleteLine.enabled(canDeleteLine);
        deleteLineButton.enabled(canDeleteLine);

        boolean enableWorkWeekSelection = tsTimesheetTable.enableWorkWeekSelection();
        timesheetWeek_LineViewHeader.enabled(enableWorkWeekSelection);
        timesheetWeek_HeaderDetails.enabled(enableWorkWeekSelection);

        tsTimesheetLine_ApprovalStatus.visible(hasLineItemWorkItem);

        // When Change reason is enabled the delete functionality in deleteLine is not valid
        deleteLine.visible(!projParameters.TimesheetChangeReason);
        deleteLineButton.visible(projParameters.TimesheetChangeReason);
        LineGrid.multiSelect(!projParameters.TimesheetChangeReason);
        ChangeReasonTabPage.visible(projParameters.TimesheetChangeReason);

        this.setButtonVisibility();
        this.refreshFactBox();
        this.initFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the form.
    /// </summary>
    public void init()
    {
        listFormParts                = new List(Types::Class);
        changeReasonsCollection      = TSTimesheetChangeReasonCollection::newStandard();
        myTimesheetFilterSelection   = TSTimesheetListPageFilter::CurrentPeriod;
        xArgs args                   = element.args();
        var menuItemName			 = args.menuItemName();

        //// Called from DIXF or from Create dialog
        //if (menuItemName != menuItemDisplayStr(TSTimesheetTableForEdit))
        //{
        //    boolean callerRecordExpected = args.caller() != null;
        //    if (callerRecordExpected
        //        && args.formViewOption() == FormViewOption::Grid)
        //    {
        //        callerRecordExpected = false;
        //    }

        //    if (callerRecordExpected)
        //    {
        //        // If the argument passed is not a TSTimesheetTable record or a TSTimesheetLine record
        //        if ((!args.record()
        //            &&  !args.lookupRecord())
        //            || (args.dataset() != tableNum(TSTimesheetTable)
        //            &&  args.dataset() != tableNum(TSTimesheetLine)))
        //        {
        //            throw error("@SYS22996");
        //        }
        //    }

        //    tsTimesheetEntryGridView = this.getTSTimesheetEntryGridViewAllTimesheets(args);
        //}

        //currentResourceRecId = ResourceFacade::findByCurrentWorker();

        //customerNameMap = new Map(Types::Int64, Types::String);

        super();
           
        projParameters = ProjParameters::find();

        //MyTimesheetFilter.selection(myTimesheetFilterSelection);
        //MyTimesheetFilter.visible(this.canCopySelectedTimesheetFromEntryPoint());
        //VersionList.visible(projParameters.TimesheetAuditTrail == NoYes::Yes);

        //// This would happen if the user started the form by "creating from favorites" or "copy selected timesheet" or from DIXF
        //TSTimesheetTable tsTimesheetTableLocal = this.callerTSTimesheetTable();

        //if (tsTimesheetTableLocal)
        //{
        //    if (!FormDataUtil::getFormDataSource(tsTimesheetTableLocal))
        //    {
        //        element.loadTimesheetTable(tsTimesheetTableLocal);
        //    }
        //}

        //if (this.canAddDeleteHeaderLineFromEntryPoint() == false)
        //{
        //    tsTimesheetTable_ds.allowCreate(false);
        //    tsTimesheetTable_ds.allowDelete(false);
        //}

        //if (element.args() && element.args().parm() == "EssWorkspace")
        //{
        //    createdFromEss = true;

        //    if (menuItemName == menuItemDisplayStr(TSTimesheetEntryMyDraftTimesheets)
        //            || menuItemName == menuItemDisplayStr(TSTimesheetEntryMyInReviewTimesheets)
        //            || menuItemName == menuItemDisplayStr(TSTimesheetEntryMyReturnedTimesheets)
        //            || menuItemName == menuItemDisplayStr(TSTimesheetEntryMyApprovedTimesheets))
        //    {
        //        element.openedFromEssMyTimesheets();
        //    }
        //}

        //cdsLockingOptionTimesheets = ProjCDSLockingOptionTable::get(ProjCDSLockingOption::Timesheets);

        //// <GIN>
        //isTaxParametersMarked_IN = TaxParameters::checkTaxParameters_IN();
        //// </GIN>

        //// <GTE>
        //if (TaxIntegrationUtils::isTaxInformationEnabled())
        //{
        //    TransTaxInformation.visible(true);
        //}
        //// </GTE>
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTSTimesheetEntryGridViewAllTimesheets</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets <c>TSTimesheetEntryGridView</c> enum value.
    /// </summary>
    /// <param name = "_args">
    ///     An args element.
    /// </param>
    /// <returns>
    ///     <c>TSTimesheetEntryGridView</c> enum value.
    /// </returns>
    protected TSTimesheetEntryGridView getTSTimesheetEntryGridViewAllTimesheets(xArgs _args)
    {
        return (_args.parmEnumType() == enumnum(TSTimesheetEntryGridView)
                                        ? _args.parmEnum()
            : TSTimesheetEntryGridView::AllTimesheets);
    }

]]></Source>
			</Method>
			<Method>
				<Name>openedFromEssMyTimesheets</Name>
				<Source><![CDATA[
    private void openedFromEssMyTimesheets()
    {
        #SysSystemDefinedButtons
        QueryBuildRange range = TSTimesheetTable_DS.queryBuildDataSource().addRange(fieldNum(TSTimesheetTable, Resource));
        range.value(int642Str(currentResourceRecId));
        range.status(RangeStatus::Hidden);

        MyTimesheetFilter.visible(false);
        this.control(this.controlId(#SystemDefinedShowFiltersButton)).visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerTSTimesheetTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the <c>TSTimesheetTable</c> record from the caller.
    /// </summary>
    /// <returns>
    ///    The <c>TSTimesheetTable</c> record from the caller; otherwise, an empty table buffer.
    /// </returns>
    public TSTimesheetTable callerTSTimesheetTable()
    {
        TSTimesheetTable    tsTimesheetTableLocal;
        Common              common = element.args().record();

        if (common.RecId == 0)
        {
            common = element.args().lookupRecord();
        }
  
        if (common.RecId != 0)
        {
            tsTimesheetTableLocal = common as TSTimesheetTable;

            if (!tsTimesheetTableLocal)
            {
                TSTimesheetLine tsTimesheetLineLocal = common as TSTimesheetLine;

                if (tsTimesheetLineLocal)
                {
                    tsTimesheetTableLocal = TSTimesheetTable::find(tsTimesheetLineLocal.TimesheetNbr);
                }

                if (!tsTimesheetTableLocal)
                {
                    TSTimesheetTableStaging entityStaging = common as TSTimesheetTableStaging;
                    tsTimesheetTableLocal = TSTimesheetTable::find(entityStaging.TimesheetNumber);
                }
            }
        }

        return tsTimesheetTableLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPeriodRangeDateFormControls</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the period range date form controls based on the current <c>TSTimesheetTable</c> record.
    /// </summary>
    /// <param name = "_fromDate">
    ///    The period from date.
    /// </param>
    /// <param name = "_toDate">
    ///    The period to date.
    /// </param>
    public void setPeriodRangeDateFormControls(
        PeriodDate _fromDate,
        PeriodDate _toDate)
    {
        str periodDates = TSTimesheetTable::startDateEndDate(_fromDate,_toDate);

        periodDateRange_LineViewHeader.text(periodDates);
        periodDateRange_HeaderDetails.text(periodDates);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTimesheetWeekDates</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the timesheet week date range form controls based on the current <c>TSTimesheetTable</c> record.
    /// </summary>
    /// <param name = "_fromDate">
    ///    The period from date.
    /// </param>
    /// <param name = "_toDate">
    ///    The period to date.
    /// </param>
    public void setTimesheetWeekDates(
        PeriodDate _fromDate,
        PeriodDate _toDate)
    {
        str periodDates = TSTimesheetTable::startDateEndDate(_fromDate,_toDate);

        timesheetWeek_LineViewHeader.text(periodDates);
        timesheetWeek_HeaderDetails.text(periodDates);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjPeriodLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the projPeriodLine based on the current <c>TSTimesheetTable</c> record. Method can be used for extensibility using CoC.
    /// </summary>
    protected void setProjPeriodLine()
    {
        projPeriodLine  = ProjPeriodLine::findFromPeriod(tsTimesheetTable.ProjPeriodId, tsTimesheetTable.PeriodFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectProjPeriodTimesheetWeek</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the projPeriodTimesheetWeek based on the current <c>TSTimesheetTable</c> record. Method can be used for extensibility using CoC.
    /// </summary>
    protected void selectProjPeriodTimesheetWeek()
    {
        select firstonly projPeriodTimesheetWeek
                where projPeriodTimesheetWeek.RecId == tsTimesheetTable.ProjPeriodTimesheetWeek;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes field values.
    /// </summary>
    void initFields()
    {
        this.setProjPeriodLine();
        this.setPeriodRangeDateFormControls(projPeriodLine.PeriodFrom, projPeriodLine.PeriodTo);

        if (tsTimesheetTable.ProjPeriodTimesheetWeek != 0)
        {
            this.selectProjPeriodTimesheetWeek();
        }
        else
        {
            TSTimesheetLine tsTimesheetLineLocal;

            select firstonly projPeriodTimesheetWeek
                exists join tsTimesheetLineLocal
                    where tsTimesheetLineLocal.TimesheetNbr            == tsTimesheetTable.TimesheetNbr
                       && tsTimesheetLineLocal.ProjPeriodTimesheetWeek == projPeriodTimesheetWeek.RecId;
        }

        this.setDates();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOwnerOrDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if current user is owner of the timesheet or owner's delegate.
    /// </summary>
    /// <returns>
    /// True if current user is owner of the timesheet or owner's delegate; otherwise, false.
    /// </returns>
    public boolean isOwnerOrDelegate()
    {
        isOwnerOrDelegate = TSTimesheetHelper::isOwnerOrDelegate(tsTimesheetTable, currentResourceRecId);

        return isOwnerOrDelegate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadTimesheetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Brings a specific timesheet into view
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// The timesheet to bring into view
    /// </param>
    public void loadTimesheetTable(TSTimesheetTable _tsTimesheetTable)
    {
        element.args().lookupRecord(_tsTimesheetTable);
        tsTimesheetTable_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isChangeReasonRequired</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if a change reason is required.
    /// </summary>
    /// <returns>
    ///    true if a change reason is required; otherwise, false.
    /// </returns>
    public boolean isChangeReasonRequired()
    {
        boolean result = false;

        if (projParameters.TimesheetChangeReasonMandatory)
        {
            result = tsTimesheetLine.RecId && (tsTimesheetLine.anyUserFieldsHaveChanged() || tsTimesheetLineWeek.fieldsChanged());

            if (!result)
            {
                if (projParameters.TimesheetValidateAbsence && tsTimesheetLine.ProjId == projParameters.TimesheetAbsenceProjId)
                {
                    //In this case we don't require change reasons for future entries
                    result = !tsTimesheetLine.RecId && tsTimesheetLineWeek.fieldsChanged(true, true);
                }
                else
                {
                    result = tsTimesheetLineWeek && !tsTimesheetLine.RecId && tsTimesheetLineWeek.fieldsChanged(true);
                }
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFactBox</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Refreshes data in related factboxes.
    /// </summary>
    public void refreshFactBox()
    {
        if (listFormParts)
        {
            ListEnumerator le = listFormParts.getEnumerator();
            while (le.moveNext())
            {
                var tsIRefreshData = le.current() as TSIFormRefreshData;
                if (tsIRefreshData)
                {
                    tsIRefreshData.refreshData();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshTimesheetGrid</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Refreshes the timesheet lines.
    /// </summary>
    void refreshTimesheetGrid()
    {
        QueryBuildDataSource tsLineQbds = tsTimesheetLine_ds.query().dataSourceTable(tableNum(TSTimesheetLine));
        tsLineQbds.clearRanges();
        tsLineQbds.clearDynalinks();
        tsLineQbds.addSortField(fieldNum(TSTimesheetLine, TimesheetNbr));
        tsLineQbds.addSortField(fieldNum(TSTimesheetLine, LineNum));
        tsLineQbds.addRange(fieldNum(TSTimesheetLine, TimesheetNbr)).value(queryValue(tsTimesheetTable.TimesheetNbr));
        tsLineQbds.addRange(fieldNum(TSTimesheetLine, ProjPeriodTimesheetWeek)).value(queryValue(projPeriodTimesheetWeek.RecId));

        tsTimesheetLine_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>register</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers a form part.
    /// </summary>
    /// <param name="_object">
    ///    The Form Part object.
    /// </param>
    /// <returns>
    ///    true if the form part was registered; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    Implementation of the <c>TSIRegister</c> interface.
    /// </remarks>
    public boolean register(Object _object)
    {
        boolean result =    _object != null
                         && _object is TSIFormRefreshData;

        if (result)
        {
            var tsIFormRefreshData = _object as TSIFormRefreshData;
            listFormParts.addEnd(tsIFormRefreshData);
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the visibility property on the buttons in the action pane.
    /// </summary>
    protected void setButtonVisibility()
    {
        if (projParameters.RecId == 0)
        {
            projParameters = ProjParameters::find();
        }

        boolean useFavorites = projParameters.UseFavorites;

        Favorites.visible(useFavorites);

        AccountingDistributionsDocumentView.visible(tsTimesheetTable.ApprovalStatus == TSAppStatus::Approved);
        TSTimesheetPostSourceDocument.visible(tsTimesheetTable.ApprovalStatus == TSAppStatus::Approved);
        ProjLedgerTransVoucher.visible(tsTimesheetTable.ApprovalStatus == TSAppStatus::Ledger);

        // CopyTimesheet has its visibility set to no. It is visible only if the entry point allows it to be.
        CopyTimesheet.visible(this.canCopySelectedTimesheetFromEntryPoint());

        // If policies are not created, hide the evaluatePolicies button
        if (!TSPolicyEvalEngine::isPolicyCreated(SysPolicyTypeEnum::TimesheetPolicy))
        {
            evaluatePolicies.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCommentDays</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the CommentsDayCombobox control with the days of the week
    /// </summary>
    /// <param name="_periodId">
    /// the period to use
    /// </param>
    /// <param name="_periodFrom">
    /// the start of the period
    /// </param>
    /// <param name="_periodTo">
    /// the end of the period
    /// </param>
    void setCommentDays(
        ProjPeriodId   _periodId,
        ProjPeriodFrom _periodFrom,
        ProjPeriodTo   _periodTo)
    {
        Array   gridDays = TSPeriods::getLineWeekDates(ProjPeriodTable::find(_periodId).WeekStart, _periodFrom, _periodTo);

        CommentsDayCombobox.clear();
        mapCommentsDayComboboxIndex = new Map(Types::Integer, Types::Integer);
        firstDayIndex = -1;

        for (int dayNum = 1; dayNum <= #daysPerWeek; dayNum++)
        {
            if (any2date(gridDays.value(dayNum)) != dateNull())
            {
                CommentsDayCombobox.add(TSPeriods::getDateCaption(any2date(gridDays.value(dayNum))));
                mapCommentsDayComboboxIndex.insert(dayNum, CommentsDayCombobox.count()-1);
                if (firstDayIndex < 0)
                {
                    firstDayIndex = dayNum;
                }
            }
            else
            {
                mapCommentsDayComboboxIndex.insert(dayNum, -1);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDates</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets period dates and timesheet line column dates.
    /// </summary>
    void setDates()
    {
        if (projPeriodLine != null && projPeriodLine.RecId != 0)
        {
            if (projPeriodTimesheetWeek == null || projPeriodTimesheetWeek.RecId == 0)
            {
                projPeriodTimesheetWeek = ProjPeriodTimesheetWeek::findFromPeriod(projPeriodLine.PeriodId, datenull());
            }

            this.setTimesheetWeekDates(projPeriodTimesheetWeek.PeriodFrom,projPeriodTimesheetWeek.PeriodTo);
            this.setLineGridDays(projPeriodLine.PeriodId, projPeriodTimesheetWeek.PeriodFrom, projPeriodTimesheetWeek.PeriodTo);
            this.setCommentDays(projPeriodLine.PeriodId, projPeriodTimesheetWeek.PeriodFrom, projPeriodTimesheetWeek.PeriodTo);
        }

        element.refreshTimesheetGrid();
        this.setFocusOnDayIndex(firstDayIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFocusOnDayIndex</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will set the focus based on the selected day in the week
    /// </summary>
    /// <param name="_index">
    /// the index of the selected day (1 based)
    /// </param>
    public void setFocusOnDayIndex(int _index)
    {
        if (_index < 1 || _index > 7)
        {
            throw error(strFmt("@Timesheet:Invalid_index_map",_index));
        }
        boolean isLineEditable = this.isLineEditable();

        TSTimesheetLineWeek_InternalComments.dataField(fieldId2Ext(fieldNum(TSTimesheetLineWeek, InternalComments), _index));
        TSTimesheetLineWeek_InternalComments.label("@SYS184012");
        TSTimesheetLineWeek_InternalComments.enabled(TSTimesheetLineWeek.Hours[_index] && isLineEditable);
        TSTimesheetLineWeek_ExternalComments.dataField(fieldId2Ext(fieldNum(TSTimesheetLineWeek, ExternalComments), _index));
        TSTimesheetLineWeek_ExternalComments.label("@SYS183989");
        TSTimesheetLineWeek_ExternalComments.enabled(TSTimesheetLineWeek.Hours[_index] && isLineEditable);

        // the combobox is zero based
        if (mapCommentsDayComboboxIndex)
        {
            CommentsDayComboBox.selection(mapCommentsDayComboboxIndex.lookup(_index));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLineEditable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates if the current timesheet line should be editable
    /// </summary>
    /// <returns>True if the current timesheet line should be editable; otherwise; false</returns>
    public boolean isLineEditable()
    {
        return this.isOwnerOrDelegate() && (tsTimesheetLine.RecId == 0 || TSTimesheetHelper::isTimesheetEditable(tsTimesheetLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setActionStripEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the action strip. Method can be used for extensibility using CoC.
    /// </summary>
    protected void setActionStripEnabled(FormActionPaneControl _actionStrip, TSTimesheetTable _tsTimesheetTable)
    {
        _actionStrip.enabled(_tsTimesheetTable.RecId != 0 && _tsTimesheetTable.validatePeriodDate(_tsTimesheetTable.PeriodFrom, true));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHeaderObjects</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the timesheet for deletion and editing.
    /// </summary>
    public void setHeaderObjects()
    {
        boolean canEditDelete = TSTimesheetHelper::canDeleteSelected(tsTimesheetTable) && this.canAddDeleteHeaderLineFromEntryPoint();
        boolean canEdit       = TSTimesheetHelper::isTimesheetFormDataSourceEditable(tsTimesheetTable, currentResourceRecId);

        tsTimesheetTable_ds.allowDelete(canEditDelete);
        tsTimesheetTable_ds.allowEdit(canEdit);

        hourTransactions.enabled(tsTimesheetTable.ApprovalStatus == TSAppStatus::Ledger);
        this.setActionStripEnabled(this.ActionStrip, tsTimesheetTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineGridDays</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the timesheet line hour column captions and shows or hides columns as needed.
    /// </summary>
    /// <param name = "_periodId">
    ///    The timesheet period ID.
    /// </param>
    /// <param name = "_periodFrom">
    ///    The period from date.
    /// </param>
    /// <param name = "_periodTo">
    ///    The period to date.
    /// </param>
    void setLineGridDays(
        ProjPeriodId   _periodId,
        ProjPeriodFrom _periodFrom,
        ProjPeriodTo   _periodTo)
    {
        Array   gridDays        = TSPeriods::getLineWeekDates(ProjPeriodTable::find(_periodId).WeekStart, _periodFrom, _periodTo);
        str     dayControlNames = strReplace(formcontrolstr(TsTimesheetEntry, TSTimesheetLineWeek_Hours_1),'1','%1');

        for (int dayNum = 1; dayNum <= #daysPerWeek; dayNum++)
        {
            FormRealControl hoursField = element.design().controlName(strfmt(dayControlNames,dayNum));

            if (any2date(gridDays.value(dayNum)) != dateNull())
            {
                dayLabels[dayNum] = TSPeriods::getDateCaption(any2date(gridDays.value(dayNum)));
                hoursField.visible(true);
                hoursField.label(dayLabels[dayNum]);
                hoursField.allowEdit(!requireStartStopTime);
            }
            else
            {
                hoursField.visible(false);
                hoursField.label('');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDeleteLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows if timesheet line can be deleted. In case timesheet line was created
    ///    but not inserted yet (possible if mandatory change reason is enabled), this
    ///    method will return true.
    /// </summary>
    /// <returns>True if the timesheet line can be deleted; otherwise, false.</returns>
    private boolean canDeleteLine()
    {
        return this.canAddDeleteHeaderLineFromEntryPoint() && !this.inViewMode() && tsTimesheetLine_ds.numberOfRowsLoaded() > 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLineNotSavedInReadOnly</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the timesheet line is in an unsaved state in the readonly mode of the timesheet.
    /// </summary>
    /// <returns>True if the line is unsaved in the readonly mode; otherwise false.</returns>
    private boolean isLineNotSavedInReadOnly()
    {
        return !this.inViewMode() && !TSTimesheetLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineObjects</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables timesheet lines and related controls for editing.
    /// </summary>
    /// <param name = "_enable">
    ///    A Boolean value that defines if timesheet lines must be enabled for editing.
    /// </param>
    public void setLineObjects(boolean _enable = true)
    {
        WorkflowWorkItemTable   workItem;
        boolean                 isEditable      = TSTimesheetHelper::isTimesheetEditable(tsTimesheetLine) || tsTimesheetLine.RecId == 0;
        boolean                 canDeleteLine   = (_enable || this.isLineNotSavedInReadOnly()) && isEditable && this.canDeleteLine();

        if (!isEditable)
        {
            // Query to find if the passed line or timesheet is assigned to the current user for approval and if the timesheet/timesheetline is in pending state
            select firstonly RecId from workItem
                where workItem.Status       == WorkflowWorkItemStatus::Pending
                   && workItem.UserId       == curUserId()
                   && ((workItem.RefTableId == tableNum(TSTimesheetTable)
                   &&   workItem.RefRecId   == tsTimesheetTable.RecId)
                   ||  (workItem.RefTableId == tableNum(TSTimesheetLine)
                   &&   workItem.RefRecId   == tsTimesheetLine.RecId));
        }

        // If the timesheet or line is not assigned to the current user for approval or if it is not in pending state hide the sales price and currency code
        // Hide Sales price and currency code
        tsTimesheetLineWeek_ds.object(fieldNum(TSTimesheetLineWeek, SalesPrice)).visible(tsTimesheetLine.ApprovalStatus == TSAppStatus::Pending && workItem.RecId != 0);
        tsTimesheetLine_ds.object(fieldNum(TSTimesheetLine, CurrencyCode)).visible(tsTimesheetLine.ApprovalStatus == TSAppStatus::Pending && workItem.RecId != 0);

        // Enable the fields in timesheet line only if the line is in created or returned state and the current user is resource or delegate
        if (!isEditable || !isOwnerOrDelegate)
        {
            isEditable = false;
        }

        boolean canPostTimesheet = (TSTimesheetPostSourceDocument.isVisible() && tsTimesheetTable.ApprovalStatus == TSAppStatus::Approved);
        boolean isAccountingEditable = isEditable || canPostTimesheet;

        // Set the editability of all the fields
        tsTimesheetLine_ds.object(fieldNum(TSTimesheetLine, ProjectDataAreaId)).allowEdit(isEditable);
        CustAccount.allowEdit(isEditable);
        ProjId.allowEdit(isEditable);
        ActivityNumber.allowEdit(isEditable);
        CatergoryName.allowEdit(isEditable);

        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),1)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),2)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),3)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),4)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),5)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),6)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldId2Ext(fieldNum(TSTimesheetLineWeek, Hours),7)).allowEdit(isEditable);

        tsTimesheetLineWeek_ds.object(fieldNum(TSTimesheetLineWeek, InternalComments)).allowEdit(isEditable);
        tsTimesheetLineWeek_ds.object(fieldNum(TSTimesheetLineWeek, ExternalComments)).allowEdit(isEditable);

        tsTimesheetLine_ds.object(fieldNum(TSTimesheetLine, CurrencyCode)).allowEdit(isEditable);
        TSTimesheetLine_TaxItemGroup.allowEdit(isAccountingEditable);
        TSTimesheetLine_TaxGroupId.allowEdit(isAccountingEditable);
        LineTotal.allowEdit(isEditable);
        tsTimesheetLine_ds.object(fieldNum(TSTimesheetLine, LinePropertyId)).allowEdit(isEditable);
        tsTimesheetLine_ds.object(fieldNum(TSTimesheetLine, ApprovalStatus)).allowEdit(isEditable);

        if (DimensionEntryControl)
        {
            // Force update the dimension defaulting controller as it is not taking the new value of editability otherwise
            DimensionEntryControl.allowEdit(isAccountingEditable);
        }

        // Approver can edit Sales Price if the line is in pending state and is assigned to him
        tsTimesheetLineWeek_ds.object(fieldNum(TSTimesheetLineWeek, SalesPrice)).allowEdit(workItem.RecId);

        // If the timesheetline is in pending state, check whether the header or line is assigned to this user and enable the linePropertyId.
        if (!isEditable && tsTimesheetLine.ApprovalStatus == TSAppStatus::Pending)
        {
            tsTimesheetLine_ds.object(fieldNum(TSTimesheetLine, LinePropertyId)).allowEdit(workItem.RecId);
        }

        if (ChangeReasonTabPage.isVisible())
        {
            // Can add a change reason if the timesheet line is editable by the current user
            // or is assigned to for workflow approval
            // or if current user can post the timesheet.
            boolean isChangeReasonEditable = isEditable || workItem.RecId || canPostTimesheet;
            TSTimesheetLineLog_ChangeReason.allowEdit(isChangeReasonEditable);
        }

        startStopTime.enabled(_enable);
        tsTimesheetAddFavorites.enabled(_enable);

        deleteLine.enabled(canDeleteLine);
        deleteLineButton.enabled(canDeleteLine);

        if (canDeleteLine)
        {
            if (tsTimesheetLine.RecId != 0)
            {
                deleteLine.enabled(!TrvWorkflowUtilities::recordHasActiveWorkItem(tsTimesheetLine_ds.cursor()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHeaderTitleText</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the form title.
    /// </summary>
    public void setHeaderTitleText()
    {
        if (tsTimesheetTable)
        {
            headerTitle.text(strFmt('%1 : %2', tsTimesheetTable.TimesheetNbr, tsTimesheetTable.resourceName()));
        }
        else
        {
            // Despite this label being on the metadata, without setting it here it will actually show the Label ID at runtime
            headerTitle.text("@SYS84637");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNewTimesheetNbr</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the new timesheet record.
    /// </summary>
    /// <param name = "_tsTimesheetNbr"></param>
    /// <returns>
    ///    The new <c>TSTimesheetTable</c> record.
    /// </returns>
    /// <remarks>
    ///    Implementation of the <c>TSITimesheetEntry</c> interface.
    /// </remarks>
    public TSTimesheetTable setNewTimesheetNbr(TSTimesheetNbr _tsTimesheetNbr)
    {
        #Task

        TSTimesheetTable    tsTimesheetTableLocal = TsTimesheetTable::find(_tsTimesheetNbr);

        if (this.canCopySelectedTimesheetFromEntryPoint())
        {
            if (!this.isTimesheetRetrievedByDataSouceQuery(tsTimesheetTableLocal))
            {
                tsTimesheetEntryQuery.initializeQueryAllTimesheetsAssignedToMeOrDelegate();
                tsTimesheetTable_ds.executeQuery();
            }
        }

        if (tsTimesheetTableLocal)
        {
            this.LoadTimesheetTable(tsTimesheetTableLocal);
        }

        this.task(#taskSwitchToLineDetailsView);

        return tsTimesheetTableLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTimesheetRetrievedByDataSouceQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the given timesheet is retrieved by the current data source query.
    /// </summary>
    /// <param name = "_timesheet">Timesheet to be searched.</param>
    /// <returns>True if the timesheet is retrieved in the result set of the datasource query; otherwise; false.</returns>
    private boolean isTimesheetRetrievedByDataSouceQuery(TSTimesheetTable _timesheet)
    {
        element.args().lookupRecord(_timesheet);
        tsTimesheetTable_ds.research();

        return tsTimesheetTable.RecId == _timesheet.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workflowActionCompleted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    When workflow action is completed, <c>TSTimesheetEntry</c> form switches to Grid View.
    /// </summary>
    /// <remarks>
    ///    Implementation of the <c>TSITimesheetEntry</c> interface.
    /// </remarks>
    public void workflowActionCompleted()
    {
        #Task

        this.task(#taskSwitchToGridView);

        // In some situations after changing to grid view, the datasource can be empty since the query
        // will be executed accordingly to the filter.
        if (tsTimesheetTable.RecId)
        {
            this.setHeaderObjects();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChildDialogClosedOk</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the child dialog closed ok property.
    /// </summary>
    /// <param name = "_dialogClosedOk">
    ///    A Boolean value that indicates if the child dialog closed ok.
    /// </param>
    /// <remarks>
    ///    Implementation of the <c>TSIParentForm</c> interface.
    /// </remarks>
    public void setChildDialogClosedOk(boolean _childDialogClosedOk)
    {
        childDialogClosedOk = _childDialogClosedOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChildDialogClosedOk</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the value of the child dialog closed ok property.
    /// </summary>
    /// <returns>
    ///    true if the dialog closed ok; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    Implementation of the <c>TSIParentForm</c> interface.
    /// </remarks>
    public boolean getChildDialogClosedOk()
    {
        return childDialogClosedOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes form tasks.
    /// </summary>
    /// <param name = "_taskId">
    ///    The ID of the task to execute.
    /// </param>
    /// <returns>
    ///    An integer value.
    /// </returns>
    public int task(int _taskId)
    {
        #Task
        int result = 1;

        switch (_taskId)
        {
            case #taskSwitchToLineDetailsView,
                #taskSwitchToHeaderDetailsView:
                TSTimesheetHelper::clearRecordSelection(TSTimesheetTable_DS);
                result = super(_taskId);
                this.formInitPost();
                break;
            case #taskSwitchToDetailsView:
                result = super(_taskId);
                this.initDetailsViewOnly();
            case #taskEditRecord:
                result = super(_taskId);
                this.formInitPost();
                this.setLineObjects(true);
                break;
            case #taskDoneEditRecord:
                result = super(_taskId);
                this.formInitPost();
                this.setLineObjects(false);
                break;
            case #taskSwitchToGridView:
                result = super(_taskId);
                if (this.canCopySelectedTimesheetFromEntryPoint())
                {
                    MyTimesheetFilter.executeFilterQuery();
                }
                break;
            case #taskDeleteRecord:
                if (tsTimesheetTable && projParameters.TimesheetChangeReason)
                {
                    TSTimesheetHelper::deleteTimesheetWithChangeReason(this,tsTimesheetTable);
                }
                else
                {
                    result = super(_taskId);
                }
                break;
            case #taskRefresh:
                var currentTimesheetNbr = tsTimesheetTable.TimesheetNbr;
                result = super(_taskId);
                var recordToFind = TSTimesheetTable::find(currentTimesheetNbr);
                element.args().lookupRecord(recordToFind);
                tsTimesheetTable_ds.research();
                this.formInitPost();
                this.setHeaderObjects();
                break;
            default:
                result = super(_taskId);
                break;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshData</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Researches and refreshes the data in the timesheet grid
    /// </summary>
    public void refreshData()
    {
        tsTimesheetLine_ds.research();

        element.refreshFactBox();
    }

]]></Source>
			</Method>
			<Method>
				<Name>performPeriodDateLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs a lookup on period dates.
    /// </summary>
    /// <param name = "_formControl">
    ///    The form control that the lookup is bound to.
    /// </param>
    public void performPeriodDateLookup(FormStringControl _formControl)
    {
        if (_formControl)
        {
            Args args = new Args(formStr(SysDateLookup));

            FormRun formRun = classfactory.formRunClass(args);
            formRun.init();
            _formControl.performFormLookup(formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>performTimesheetLineWeekLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs a lookup on the timesheet week.
    /// </summary>
    /// <param name = "_formControl">
    ///    The form control that the lookup is bound to.
    /// </param>
    public void performTimesheetLineWeekLookup(FormStringControl _formControl)
    {
        if (_formControl)
        {
            var previousProjPeriodTimesheetWeekText = _formControl.text();
            var previousProjPeriodTimesheetWeek = projPeriodTimesheetWeek;

            Args args = new Args(formStr(TSTimesheetWeekLookup));
            args.record(projPeriodLine);

            FormRun formRun = classfactory.formRunClass(args);
            formRun.init();
            _formControl.performFormLookup(formRun);
            formRun.wait();

            projPeriodTimesheetWeek = formRun.selectRecordModeSelectedRecord();

            if (projPeriodTimesheetWeek.RecId != 0)
            {
                var hasTimesheetLineToValidate = tsTimesheetLine.RecId != 0 || tsTimesheetLine_ds.numberOfRowsLoaded() > 0;

                if (!this.inViewMode() && hasTimesheetLineToValidate && TSTimesheetLine_ds.validateWrite() == false)
                {
                    projPeriodTimesheetWeek = previousProjPeriodTimesheetWeek;
                    _formControl.text(previousProjPeriodTimesheetWeekText);
                }
                else
                {
                    tsTimesheetTable.ProjPeriodTimesheetWeek = projPeriodTimesheetWeek.RecId;
                    this.setDates();
                    this.setLineObjects(tsTimesheetLine.RecId != 0);
                    this.refreshFactBox();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewDetailsJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Jump to the required form to view more details of the record.
    /// </summary>
    /// <param name = "_menuItem">
    ///     The menu item that opens the form for more details.
    /// </param>
    /// <param name = "_record">
    ///     The record to view details for, Project, Category, Tax etc.
    /// </param>
    private void viewDetailsJumpRef(str _menuItem, Common _record)
    {
        MenuFunction    menuFunction    = new MenuFunction(_menuItem, MenuItemType::Display);
        Args            args            = new Args();

        if (_record.TableId == tableNum(smmActivities))
        {
            args.lookupField(fieldNum(smmActivities, ActivityNumber));
        }

        args.lookupRecord(_record);
        args.caller(element);

        menuFunction.copyCallerQuery(CopyCallerQuery::No);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runDisplayMenuItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Run the form associated to the display menu item, with no args.
    /// </summary>
    /// <param name = "_menuItem">The menu item to open the form.</param>
    private void runDisplayMenuItem(str _menuItem)
    {
        MenuFunction    menuFunction    = new MenuFunction(_menuItem, MenuItemType::Display);
        Args            args            = new Args();

        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableComments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will enable/disable the comments fields based on selected day in the week
    /// </summary>
    /// <param name="_index">
    /// the index of the selected day (1 based)
    /// </param>
    /// <param name="_changedValue">
    /// the value in the hour text box
    /// </param>
    public void enableComments(int _index, real _changedValue)
    {
        // Enable/disable comments if the comments field is currently showing the
        // comments for the index passed in...
        if (CommentsDayComboBox.selection() == mapCommentsDayComboboxIndex.lookup(_index))
        {
            var isLineEditable = this.isLineEditable();

            TSTimesheetLineWeek_InternalComments.enabled(_changedValue && isLineEditable);
            TSTimesheetLineWeek_ExternalComments.enabled(_changedValue && isLineEditable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the form and selects the appropriate timesheet to be displayed
    /// </summary>
    public void run()
    {
        // Preserve the currently selected timesheet
        var currentTimesheetNbr = tsTimesheetTable.TimesheetNbr;

        // super will sometimes change the record to the latest timesheet
        // e.g. if browsing to the original document from the ledger
        super();

        // Find the preserved timesheet number on the datasource if not already selected
        if (currentTimesheetNbr && currentTimesheetNbr != TSTimesheetTable.TimesheetNbr)
        {
            var recordToFind = TSTimesheetTable::find(currentTimesheetNbr);
            element.args().lookupRecord(recordToFind);
            tsTimesheetTable_ds.research(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes the form
    /// </summary>
    public void close()
    {
        super();

        if (createdFromEss)
        {
            ESSCommonHelper::refreshCallerForm(element.args().parm(), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProjectExternallyManaged</Name>
				<Source><![CDATA[
    private boolean validateProjectExternallyManaged(ProjId _projId)
    {
        boolean ret = true;

        if (cdsLockingOptionTimesheets)
        {
            if (Project::isProjectExternallyManaged(_projId))
            {
                ret = checkFailed(strfmt("@Proj:ProjCDSValueInvalidDueToExternal", "@Proj:ProjCDSTimesheets"));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyRecordContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override the record context if the RequestQueryParameterCollection of current host url has wrong filter
    /// for the line level workflow which uses the header table but line level value
    /// </summary>
    /// <param name = "_recordContext">The current record context.</param>
    /// <returns>A boolean value to show the apply record context is good.</returns>    
    public boolean applyRecordContext(str _recordContext)
    {
        if (this.args().menuItemName() == menuItemDisplayStr(TSTimesheetEntryDetailsTimesheetForMyReview))
        {
            var generator   = new Microsoft.Dynamics.AX.Framework.Utilities.UrlHelper.UrlGenerator();
            var currentHost = new System.Uri(UrlUtility::getUrl());

            // Parse a current host url to retrieve the RequestQueryParameterCollection
            generator.parseFullURL(currentHost.AbsoluteUri);
         
            var requestQueryParameterCollection = generator.RequestQueryParameterCollection;

            if (requestQueryParameterCollection.getParameterCount() > 0)
            {
                str field, value;
                boolean dataSourceBlank, found;

                while (requestQueryParameterCollection.moveNext())
                {
                    var requestQueryParameter = requestQueryParameterCollection.current();

                    if (requestQueryParameter.DataSource == '')
                    {
                        requestQueryParameter.DataSource = tableStr(TSTimesheetTable);
                        dataSourceBlank = true;
                    }

                    if (requestQueryParameter.DataSource == tableStr(TSTimesheetTable) &&
                        requestQueryParameter.getFieldValueCount() > 0)
                    {
                        for (int i = 0; i < requestQueryParameter.getFieldValueCount(); i++)
                        {
                            field = requestQueryParameter.getField(i);
                            value = requestQueryParameter.getValue(i);

                            // When coming from the line level workflow, the filter can contain a RecId that it thinks is from the TSTimesheetTable,
                            // but in reality is from the TSTimesheetLine table and needs to be resolved against its actual header record.
                            if (field == fieldId2Name(tableNum(TSTimesheetTable), fieldNum(TSTimesheetTable, RecId)))
                            {
                                // Try to find the TSTimesheetTable, if not, find the line and change the filter context to the TSTimesheetTable header
                                if (!TSTimesheetTable::findRecId(str2Int64(value)).RecId)
                                {
                                    TSTimesheetLine timesheetLineLocal = TSTimesheetLine::findRecId(str2Int64(value));
                                    if (timesheetLineLocal.RecId)
                                    {
                                        value = int642Str(TSTimesheetTable::find(timesheetLineLocal.TimesheetNbr).RecId);

                                        requestQueryParameter.updateEntry(field, value);
                                        found = true;
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    if (found || dataSourceBlank)
                    {
                        _recordContext = generator.generateRequestQueryString();

                        break;
                    }
                }
            }
        }
    
        return super(_recordContext);;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TSTimesheetTable</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs necessary actions when a timesheet is activated.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int result = super();

            element.enableWorkflowButton();
            element.updateWorkflowButtonForLineVisibility();

            element.activateTimesheetTable();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Executes code when the marking of a record changes.
        /// </summary>
        public void markChanged()
        {
            super();
            this.allowDelete(TSTimesheetHelper::canDeleteSelected(TSTimesheetTable));
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializes the datasource.
        /// </summary>
        public void init()
        {
            super();
            //tsTimesheetEntryQuery = TSTimesheetEntryQuery::newStandard(this, currentResourceRecId);
            //tsTimesheetEntryQuery.initializeQuery(tsTimesheetEntryGridView,myTimesheetFilterSelection);
            element.setHeaderTitleText();
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Calls the 'Create timesheet' menu item.
        /// </summary>
        /// <param name = "_append">
        ///    A Boolean value that indicates if the new record must be appended; optional.
        /// </param>
        public void create(boolean _append = false)
        {
            if (createdFromEss)
            {
                new MenuFunction(menuitemdisplaystr(TSTimesheetCreateFromEss),MenuItemType::Display).run(new Args(element));
            }
            else
            {
                new MenuFunction(menuitemdisplaystr(TSTimesheetCreate),MenuItemType::Display).run(new Args(element));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            //QueryBuildDataSource queryBuildDataSource = this.query().dataSourceTable(tableNum(TsTimesheetsPendingView));

            //// When we try to reach the "Timesheets for my review" page from the tile on the self service workspace, the user ID might sometimes be incorrect.
            //// This happens when we try to export the self service workspace of one user (which contains this tile) and then try to import and use it for another user.
            //// In this case, try to remove and add the range for the current user.
            //if (queryBuildDataSource)
            //{
            //    QueryBuildRange queryBuildRange = queryBuildDataSource.findRange(fieldNum(TsTimesheetsPendingView, UserId));
            //    if (queryBuildRange)
            //    {
            //        queryBuildDataSource.clearRange(fieldNum(TsTimesheetsPendingView, UserId));
            //        queryBuildRange = queryBuildDataSource.addRange(fieldNum(TsTimesheetsPendingView, UserId));
            //        queryBuildRange.status(RangeStatus::Hidden);
            //        queryBuildRange.value(queryValue(curuserid()));
            //    }
            //}

            QueryBuildDataSource queryBuildDataSource = this.query().dataSourceTable(tableNum(TSTimesheetTable));
            queryBuildDataSource.clearDynalinks();
            //// When we try to reach the "Timesheets for my review" page from the tile on the self service workspace, the user ID might sometimes be incorrect.
            //// This happens when we try to export the self service workspace of one user (which contains this tile) and then try to import and use it for another user.
            //// In this case, try to remove and add the range for the current user.
            if (queryBuildDataSource)
            {
                QueryBuildRange queryBuildRange = queryBuildDataSource.addRange(fieldNum(TSTimesheetTable, SIGParentResource));
                if (queryBuildRange)
                {
                    //queryBuildDataSource.clearRange(fieldNum(TSTimesheetTable, SIGParentWorker));
                    //queryBuildRange = queryBuildDataSource.addRange(fieldNum(TSTimesheetTable, SIGParentWorker));
                    queryBuildRange.status(RangeStatus::Hidden);
                  //  queryBuildRange.value(queryValue(strFmt('%1 && %2',ResourceFacade::findByWorker(HcmWorkerLookup::currentWorker()),SysQuery::valueNot(0))));

                    //queryBuildRange.value(strFmt('((SIGParentResource == %1) )', ResourceFacade::findByWorker(HcmWorkerLookup::currentWorker()), queryValue("0")));
                    queryBuildRange.value(queryValue(ResourceFacade::findByWorker(HcmWorkerLookup::currentWorker())));
                }
            }
            super();

            if (TSTimesheetTable.ApprovalStatus == TSAppStatus::Create)
            {
                element.formInitPost();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>timesheetTotalHours</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Calculates the total hours for all the lines of the timesheet.
        /// </summary>
        /// <returns>
        ///    Total hours.
        /// </returns>
        public display TSHoursTotal timesheetTotalHours()
        {
            // To update the total hours on the form, instantly for any changes to TSTimesheetLineWeek_DS.
            TSTimesheetLineWeek_DS.observe();
            return tsTimesheetTable.totalHours();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Reevaluates the visibility of the timesheet header workflow button after update/save to the timesheet
        /// </summary>
        public void write()
        {
            super();

            element.enableWorkflowButton();
            element.updateWorkflowButtonForLineVisibility();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Reevaluates the visibility of the timesheet header workflow button after delete
        /// </summary>
        public void delete()
        {
            super();

            element.enableWorkflowButton();
            element.updateWorkflowButtonForLineVisibility();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            // If the user has access to the TSTimesheetEntryGridViewAllTimesheets menu item then he has option to enter the multiple period timesheets.
            // As an approver if he is validating the changes on the both the weeks he should change the "Work week", changing the timesheet "Work week" causes update.
            // We are validating whether the User is an actual approver for the timesheet, if he is the approver then he should not get the error message as shown below.
            // We also validate whether the user has access to the TSTimesheetEntryGridViewAllTimesheets menu item because if the timesheet is not in the 'in review' state, it will not have a valid approver.
            if (!TSTimesheetValidation::userIsValidWorkflowApprover(tsTimesheetTable) && !hasMenuItemAccess(menuitemDisplayStr(TSTimesheetEntryGridViewAllTimesheets), MenuItemType::Display))
            {
                ret = ret & tsTimesheetTable.checkDelegation(tsTimesheetTable.Resource);

                if (ret && !TSTimesheetValidation::userHasCurrentDelegateAccessFor(tsTimesheetTable.Resource))
                {
                    //%1 cannot enter timesheets for employee %2
                    ret = checkFailed(strFmt("@SYS183898",
                                     UserInfoHelp::userName(curUserId()),
                                     ResourceFacade::getName(tsTimesheetTable.Resource)));
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Updates form controls and initializes values when the resource is modified.
            /// </summary>
            public void modified()
            {
                super();

                requireStartStopTime          = TSResource::timesheetRequiresStartStopTime(TSTimesheetTable.Resource,projParameters);
                tsTimesheetTable.ProjPeriodId = ResourceFacade::getPeriodId(TSTimesheetTable.Resource);

                // Modify the fields manually
                projPeriodLine              = ProjPeriodLine::findFromPeriod(tsTimesheetTable.ProjPeriodId, tsTimesheetTable.PeriodFrom);
                tsTimesheetTable.PeriodFrom = projPeriodLine.PeriodFrom;
                tsTimesheetTable.PeriodTo   = projPeriodLine.PeriodTo;

                projPeriodTimesheetWeek = ProjPeriodTimesheetWeek::findFromPeriod(tsTimesheetTable.ProjPeriodId, tsTimesheetTable.PeriodFrom);
                tsTimesheetTable.ProjPeriodTimesheetWeek = projPeriodTimesheetWeek.RecId;

                element.setPeriodRangeDateFormControls(projPeriodLine.PeriodFrom,projPeriodLine.PeriodTo);
                element.setDates();
                element.setLineObjects(tsTimesheetLine.RecId != 0);
                element.formInitPost();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TSTimesheetLine</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializes the <c>TSTimesheetLine</c> datasource.
        /// </summary>
        public void init()
        {
            super();

            //Filter out lines initially as a queryRun would show all lines until the filter is set in refreshTimesheetGrid()
            SysQuery::findOrCreateRange( tsTimesheetLine_ds.queryBuildDataSource(), fieldNum(TSTimesheetLine, TimesheetNbr)).value(queryValue(SysQuery::valueEmptyString()));
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Validates if the timesheet line can be deleted.
        /// </summary>
        /// <returns>
        ///    true if the line can be deleted; otherwise, false.
        /// </returns>
        public boolean validateDelete()
        {
            boolean result = true;

            if (TsTimesheetline.RecId && TsTimesheetlineWeek.RecId)
            {
                if (!isOwnerOrDelegate)
                {
                    result = checkFailed("@SYS35032");
                }

                if (   result
                    && projParameters.TimesheetChangeReasonMandatory
                    && !changeReasonsCollection.exists(TsTimesheetline.RecId))
                {
                    result = checkFailed("@SYS4006053");
                    TSTimesheetLineLog_ChangeReason.setFocus();
                }
            }

            result = result && super();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>changeReason</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Edits the change reason.
        /// </summary>
        /// <param name = "_set">
        ///    A Boolean value that defines if the value must be set.
        /// </param>
        /// <param name = "_tsTimesheetLine">
        ///    The <c>TSTimesheetLine</c> record that the change reason relates to.
        /// </param>
        /// <param name = "_value">
        ///    The change reason.
        /// </param>
        /// <returns>
        ///    The change reason.
        /// </returns>
        public edit Notes changeReason(
            boolean         _set,
            TSTimesheetLine _tsTimesheetLine,
            Notes           _value = '')
        {
            return  _set ? changeReasonsCollection.set(_tsTimesheetLine.RecId,_value) : changeReasonsCollection.get(_tsTimesheetLine.RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Validates if the timesheet line can be written to the database.
        /// </summary>
        /// <returns>
        ///    true if the record can be written to the database; otherwise, false.
        /// </returns>
        public boolean validateWrite()
        {
            boolean result = true;

            if (skipValidateWrite || isDeletingLine)
            {
                skipValidateWrite = false;
                return true;
            }

            result = result && TSTimesheetHelper::verifyVersions(
                                                    TSTimesheetTable,
                                                    TSTimesheetLine,
                                                    TSTimesheetLineWeek,
                                                    "@Timesheet:Timesheet_OutOfDate_ErrorMessage");

            result = result && tsTimesheetLineWeek.validateRecord(tsTimesheetLine.ProjId);

            if (result && element.isChangeReasonRequired() && !changeReasonsCollection.exists(TSTimesheetLine.RecId))
            {
                result = checkFailed("@SYS4006053");
                TSTimesheetLineLog_ChangeReason.setFocus();
            }

            result = result && super();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Deletes the current timesheet line.
        /// </summary>
        /// <param name = "_timesheetLine">
        ///    A timesheet line that is used for validation and logging; optional.
        /// </param>
        public void delete(TSTimesheetLine _timesheetLine = null)
        {
            TSTimesheetLine tsTimesheetLineLocal = _timesheetLine ? _timesheetLine.data() : TSTimesheetLine;

            if (tsTimesheetLineLocal.RecId)
            {
                if (projParameters.TimesheetChangeReasonMandatory && !changeReasonsCollection.exists(tsTimesheetLineLocal.RecId))
                {
                    checkFailed("@SYS4006053");
                    TSTimesheetLineLog_ChangeReason.setFocus();
                    return;
                }

                ttsBegin;
                if (projParameters.TimesheetAuditTrail)
                {
                    TSTimesheetLineLog::CreateTableAndLineLog(
                        tsTimesheetLineLocal,
                        TSTimesheetLineWeek,
                        changeReasonsCollection.get(tsTimesheetLineLocal.RecId),
                        TsTimesheetChangeType::Delete);
                }
                super();

                changeReasonsCollection.remove(tsTimesheetLineLocal.RecId);
                ttsCommit;
            }
            else
            {
                super();
            }

            select firstonly RecId from tsTimesheetLineLocal
                where tsTimesheetLineLocal.TimesheetNbr            == tsTimesheetTable.TimesheetNbr
                   && tsTimesheetLineLocal.ProjPeriodTimesheetWeek == projPeriodTimesheetWeek.RecId;

            if (tsTimesheetLineLocal.RecId)
            {
                element.refreshFactBox();

                this.research(true);
            }

            element.updateWorkflowButtonForLineVisibility();
            element.setLineObjects(tsTimesheetLineLocal.RecId != 0);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initializeTimesheetLineWeekBuffer</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializes the TimesheetLineWeek buffer based on the <c>TSTimesheetLineWeek</c> record. Method can be used for extensibility using CoC.
        /// </summary>
        protected TSTimesheetLineWeek initializeTimesheetLineWeekBuffer(TSTimesheetLineWeek _tsTimesheetLineWeek)
        {
            TSTimesheetLineWeek timesheetLineWeekUpdateBuffer = TSTimesheetLineWeek::findRecId(_tsTimesheetLineWeek.RecId,true);
            timesheetLineWeekUpdateBuffer.Hours               = _tsTimesheetLineWeek.Hours;
            timesheetLineWeekUpdateBuffer.InternalComments    = _tsTimesheetLineWeek.InternalComments;
            timesheetLineWeekUpdateBuffer.ExternalComments    = _tsTimesheetLineWeek.ExternalComments;
            timesheetLineWeekUpdateBuffer.SalesPrice          = _tsTimesheetLineWeek.SalesPrice;
            timesheetLineWeekUpdateBuffer.PostStatus          = _tsTimesheetLineWeek.PostStatus;
            timesheetLineWeekUpdateBuffer.ProjTransDate       = _tsTimesheetLineWeek.ProjTransDate;

            return timesheetLineWeekUpdateBuffer;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Writes the current timesheet line to the database.
        /// </summary>
        public void write()
        {
            if (isDeletingLine)
            {
                return;
            }

            boolean isInsert = (tsTimesheetLine.RecId == 0);
            boolean result   = true;
            RecId   tsTimesheetLineRecId = tsTimesheetLine.RecId;

            ttsBegin;

            super();

            if (projParameters.TimesheetAuditTrail)
            {
                TSTimesheetLineLog::CreateTableAndLineLog(
                    TSTimesheetLine,
                    TSTimesheetLineWeek,
                    changeReasonsCollection.get(tsTimesheetLineRecId),
                    isInsert ? TsTimesheetChangeType::Create : TsTimesheetChangeType::Update);
            }

            if (isInsert)
            {
                boolean noHours = true;
                tsTimesheetLineWeek.tsTimesheetLine = tsTimesheetLine.RecId;

                for (int i = 1; i <= #daysPerWeek; i++)
                {
                    if (!tsTimesheetLineWeek.checkMinTimeIncrement(tsTimesheetLineWeek.Hours[i]))
                    {
                        tsTimesheetLineWeek.Hours[i] = 0;
                    }
                    if (tsTimesheetLineWeek.Hours[i] > 0)
                    {
                        noHours = false;
                    }
                }
                result = tsTimesheetLineWeek.validateWrite();

                if (result)
                {
                    tsTimesheetLineWeek.insert();
                    tsTimesheetLineWeek_ds.reread();
                    lineTotal.hasChanged(true);
                }

                if (   result
                    && !noHours)
                {
                    TSTimesheetTable::checkHours(tsTimesheetLine.TimesheetNbr, true);
                }
            }
            else
            {
                result = tsTimesheetLineWeek.validateWrite();

                if (result)
                {
                    // The formdatasource for TSTimesheetLineWeek will not let us force the write in code
                    // So we have to write using a different buffer and then reread the formdatasource
                    TSTimesheetLineWeek timesheetLineWeekUpdateBuffer = this.initializeTimesheetLineWeekBuffer(tsTimesheetLineWeek);
                    timesheetLineWeekUpdateBuffer.write();

                    // Only do this for approved status
                    if (tsTimesheetLine.RecId > 0 && tsTimesheetLine.ApprovalStatus == TSAppStatus::Approved)
                    {
                        // After saving the timesheet line we need to submit the changed source document line
                        // this is needed if the dimensions have changed.
                        if (timesheetLineWeekUpdateBuffer.RecId != 0)
                        {
                            TSTimesheetTrans timesheetTransBuffer;

                            while select forupdate timesheetTransBuffer
                                where timesheetTransBuffer.tsTimesheetLineWeek == tsTimesheetLineWeek.RecId
                            {
                                // Update will in turn submit to the source doc framework
                                timesheetTransBuffer.update();
                            }
                        }
                    }

                    tsTimesheetLineWeek_ds.reread();

                    lineTotal.hasChanged(true);
                }
            }

            if (result)
            {
                ttscommit;
            }
            else
            {
                ttsabort;
            }

            element.updateWorkflowButtonForLineVisibility();

            element.refreshFactBox();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Sets line controls when a line is activated.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int result = super();

            element.setLineObjects(true);

            element.updateWorkflowButtonForLineVisibility();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Creates a new timesheet line.
        /// </summary>
        /// <param name = "_append">
        ///    A Boolean value that defines if the line must be appended.
        /// </param>
        public void create(boolean _append = false)
        {
            element.allowHeaderFieldEdit(false);
            tsTimesheetTable_ds.write();

            tsTimesheetLine_ds.research(true);

            // Re initialize the skipValidation flag
            skipValidateWrite = false;

            super(_append);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializes values of the current <c>TSTimesheetLine</c> record.
        /// </summary>
        public void initValue()
        {
            tsTimesheetLine.TimesheetNbr            = tsTimesheetTable.TimesheetNbr;
            tsTimesheetLine.ProjPeriodTimesheetWeek = tsTimesheetTable.RecId;
            tsTimesheetLine.ProjectDataAreaId       = strUpr(curext());

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>workflowIcon</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Display method for the workflow icon on the timesheet lines
        /// </summary>
        /// <param name = "_line">
        ///     Timesheet line datasource record.
        /// </param>
        public display container workflowIcon(TSTimesheetLine _line)
        {
            ImageReference imgRef;

            workflowIconObservableLink.observe();

            return TSTimesheetHelper::getWorkflowImageReference(_line).pack();
        }

]]></Source>
					</Method>
					<Method>
						<Name>customerName</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Display method for the customer name on the <c>TSTimesheetLine</c> record.
        /// </summary>
        /// <param name = "_line">
        ///     Timesheet line datasource record.
        /// </param>
        public display CustName customerName(TSTimesheetLine _line)
        {
            CustName customerName;

            //if (customerNameMap.exists(_line.RecId))
            //{
            //    customerName = customerNameMap.lookup(_line.RecId);

            //    //Remove the customer name from the map if RecId is 0
            //    if (!_line.RecId)
            //    {
            //        customerNameMap.remove(_line.RecId);
            //    }
            //}
            //else if (_line.ProjId)
            //{
            //    customerName = _line.custName();

            //    if (customerName && _line.RecId)
            //    {
            //        customerNameMap.insert(_line.RecId, customerName);
            //    }
            //}
            
            return customerName;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookupExtensionActive</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Method can be used for extensibility using CoC.
            /// </summary>
            protected boolean lookupExtensionActive()
            {
                return true;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (this.lookupExtensionActive())
                {
                    changecompany(tsTimesheetLine.ProjectDataAreaId)
                    {
                        HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(tsTimesheetLine.ProjId), ProjParameters::find().BlockParentActivitySelection);
                    }
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Performs required actions when the ActivityNumber is modified.
            /// </summary>
            public void modified()
            {
                super();

                if (!TSTimesheetLine.isCategoryValid(TSTimesheetLine.CategoryId))
                {
                    TSTimesheetLine.CategoryId = TSTimesheetLine.setDefaultCategory();
                }

                tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, activityTxt));
                tsTimesheetLine_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GTE>
                if (TaxIntegrationUtils::isTaxInformationEnabled())
                {
                    TransTaxInformationHelper::newHelper().updateTransTaxInformationFromProjCategory(TSTimesheetLine, TSTimesheetLine.CategoryId);
                }
                // </GTE>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GTE>
                if (TaxIntegrationUtils::isTaxInformationEnabled())
                {
                    TransTaxInformationHelper::newHelper().updateTransTaxInformationFromProjTable(TSTimesheetLine);
                }
                // </GTE>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TSTimesheetLineWeek</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Disables deletion of <c>TSTimesheetLineWeek</c> records.
        /// </summary>
        public void delete()
        {
            // do nothing
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Validates if records can be written to the <c>TSTimesheetLineWeek</c> datasource.
        /// </summary>
        /// <returns>
        ///    Always returns true.
        /// </returns>
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Writes the current <c>TSTimesheetLineWeek</c> record to the database.
        /// </summary>
        /// <param name = "_doWork">
        ///    A Boolean value that defines whether to write the record to the database; optional.
        /// </param>
        public void write(boolean _doWork = false)
        {
            if (_doWork)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializes values of the current <c>TSTimesheetLineWeek</c> record.
        /// </summary>
        public void initValue()
        {
            tsTimesheetLineWeek.TimesheetNbr = tsTimesheetLine.TimesheetNbr;
            tsTimesheetLineWeek.LineNum      = tsTimesheetLine.LineNum;
            tsTimesheetLineWeek.ProjPeriodId = tsTimesheetTable.ProjPeriodId;
            tsTimesheetLineWeek.DayFrom      = projPeriodTimesheetWeek.PeriodFrom;
            tsTimesheetLineWeek.DayTo        = projPeriodTimesheetWeek.PeriodTo;

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TSTimesheetLineTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Determines if the IN localization applies.
        /// </summary>
        /// <returns>
        ///    true if the IN localization applies; otherwise, false.
        /// </returns>
        public boolean isNeeded()
        {
            return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializes the <c>TSTimesheetLineTaxExtensionIN</c> datasource.
        /// </summary>
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CompanyLocation</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Views details of the company location.
            /// </summary>
            public void jumpRef()
            {
                TaxInformation_IN::jumpRefLocationAddressForm(tstimesheetLineTaxExtensionIN.CompanyLocation, this);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return TaxInformation_IN::locationLookup(_formReferenceControl, CompanyInfo::find().RecId);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Performs required actions when the company location is modified.
            /// </summary>
            public void modified()
            {
                super();

                TSTimesheetLineTaxExtensionIN_ds.refresh();
                TSTimesheetLineTaxExtensionIN.TaxInformation = TaxInformation_IN::findDefaultByLocation(tstimesheetLineTaxExtensionIN.CompanyLocation).RecId;
                TSTimesheetLineTaxExtensionIN_ds.object(fieldNum(TSTimesheetLineTaxExtensionIN, TaxInformation)).modified();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxInformation</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Views details of the tax information.
            /// </summary>
            public void jumpRef()
            {
                TaxInformation_IN::jumpRef(tstimesheetLinetaxextensionIN.TaxInformation, this);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Performs a reference lookup for the tax information.
            /// </summary>
            /// <param name = "_formReferenceControl">
            ///    The form control.
            /// </param>
            /// <returns>
            ///    A record buffer.
            /// </returns>
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return TaxInformation_IN::lookup(_formReferenceControl, TSTimesheetLinetaxextensionIN.CompanyLocation);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///    Performs required actions when the tax information is modified.
            /// </summary>
            public void modified()
            {
                super();
                taxInformation_IN_DS.linkActive();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CopyTimesheet</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Copies the selected timesheet record to create a new timesheet.
        /// Override so as to load the new timesheet data in the same form instance and avoid opening a new form.
        /// </summary>
        public void clicked()
        {
            TSTimesheetCreate tsTimesheetCreate = TSTimesheetCreate::newStandard(TSTimesheetCmd::Copy, true, TSTimesheetTable);
            tsTimesheetCreate.run();

            if (tsTimesheetCreate.parmNewTimesheet())
            {
                element.setNewTimesheetNbr(TSTimesheetTable::findRecId(tsTimesheetCreate.parmNewTimesheet()).TimesheetNbr);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Delegates</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the TSTimesheetMyDelegates form.
        /// Override so as to avoid passing parent context to the form via menu item buttons on the ActionPane.
        /// </summary>
        public void clicked()
        {
            element.runDisplayMenuItem(menuItemDisplayStr(TSTimesheetMyDelegates));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Favorites</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the TSTimesheetMyFavorites form.
        /// Override so as to avoid passing parent context to the form via menu item buttons on the ActionPane.
        /// </summary>
        public void clicked()
        {
            element.runDisplayMenuItem(menuItemDisplayStr(TSTimesheetMyFavorites));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetPostSourceDocument</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// After posting the timesheet, the posted record must be read and the form must be updated.
        /// If the user has selected many timesheets to post, then, the data source query will be executed to update all at once.
        /// </summary>
        public void clicked()
        {
            super();

            if (this.isPostingMultipleTimesheets())
            {
                TSTimesheetTable_ds.executeQuery();
            }
            else
            {
                tsTimesheetTable_ds.reread();
                tsTimesheetTable_ds.refresh();

                element.formInitPost();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>isPostingMultipleTimesheets</Name>
						<Source><![CDATA[
        /// <summary>
        /// Indicates if the user is posting more than one timesheeet.
        /// </summary>
        /// <returns>True if the user is posting more than 1 timesheet; otherwise; false.</returns>
        private boolean isPostingMultipleTimesheets()
        {
            return TSTimesheetHelper::hasMoreThanOneRecordSelected(tsTimesheetTable_ds);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetTable_Resource</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the HcmWorker form for the resource
        /// </summary>
        public void jumpRef()
        {
            ResourceFacade::jumpRefToHcmWorker(TSTimesheetTable.Resource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Resource_LineViewHeader</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup for the resource.
        /// </summary>
        public Common lookupReference()
        {
            return TSResource::lookupDelegateResources(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the HcmWorker form for the resource
        /// </summary>
        public void jumpRef()
        {
            ResourceFacade::jumpRefToHcmWorker(TSTimesheetTable.Resource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PeriodDateRange_LineViewHeader</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup for the period dates.
        /// </summary>
        public void lookup()
        {
            element.performPeriodDateLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimesheetWeek_LineViewHeader</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup for the timesheet week.
        /// </summary>
        public void lookup()
        {
            element.performTimesheetLineWeekLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NewLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Creates a new timesheet line.
        /// </summary>
        public void clicked()
        {
            super();

            // A new line is not saved but should allow deleting before saving.
            // Scenario: First line created (not saved) but need to be deleted
            // Thus need to set negate the NeedsRecord condition to allow enabling the delete button
            deleteLine.needsRecord(0);

            // StartStopTime should be disabled when there are no lines. However when
            // a new line is added and not saved yet, the startstop button should be enabled.
            // The start stop button has 'SaveRecord' set to true which would then save the line when clicked.
            StartStopTime.needsRecord(0);

            tsTimesheetLine_ds.create();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteLine</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Deletes a timesheet line.
        /// </summary>
        public void clicked()
        {
            skipValidateWrite   = true;
            isDeletingLine      = true;

            // If there is no record in database yet, remove it from datasource; otherwise, remove it from the database.
            if (TSTimesheetLine.RecId == 0)
            {
                TSTimesheetLine_ds.delete();
            }
            else
            {
                super();
            }

            // Set the NeedsRecord condition to prevent the delete button to be enabled erronously
            DeleteLine.needsRecord(1);
            isDeletingLine = false;

            // Set the NeedsRecord condition to prevent the StartStopTime button to be enabled when there is no record
            StartStopTime.needsRecord(1);

            // Research the data source after delete and refresh the fact box data.
            // This will also enable/disable any controls that have needsrecord set.
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteLineButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Deletes a timesheet line.
        /// </summary>
        public void clicked()
        {
            isDeletingLine = true;
            TSTimesheetLine_ds.delete(TSTimesheetLine);
            isDeletingLine = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StartStopTime</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Opens the <c>TSTimesheetEntryStartStopTime</c> form.
        /// </summary>
        public void clicked()
        {
            if (TSTimesheetHelper::isTimesheetEditable(tsTimesheetLine))
            {
                tsTimesheetLine_ds.write();
            }

            super();
            // Launch the form modally
            MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr(TSTimesheetEntryStartStopTime), MenuItemType::Display);

            Args args = new Args();
            args.record(tsTimesheetLine_ds.cursor());
            args.caller(element);

            FormRun formRun = menuFunction.create(args);
            formRun.run();
            formRun.wait(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CopyFromTimesheet</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Copies timesheet lines from another timesheet.
        /// </summary>
        public void clicked()
        {
            this.parameters(int642str(projPeriodTimesheetWeek.RecId));

            super();

            element.allowHeaderFieldEdit(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MyFavorites</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Creates timesheet lines from favorites.
        /// </summary>
        public void clicked()
        {
            this.parameters(int642str(projPeriodTimesheetWeek.RecId));

            super();

            tsTimesheetLine_ds.executeQuery();
            element.allowHeaderFieldEdit(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AssignedActivities</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Creates timesheet lines from assigned activities.
        /// </summary>
        public void clicked()
        {
            this.parameters(int642str(projPeriodTimesheetWeek.RecId));

            super();

            tsTimesheetLine_ds.executeQuery();
            element.allowHeaderFieldEdit(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SaveToFavorites</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Creates favorites from timesheet lines.
        /// </summary>
        public void clicked()
        {
            super();

            TSTimesheetHelper::addToFavorites(tsTimesheetLine_ds);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLine_ProjectDataAreaId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup on the company for the project.
        /// </summary>
        public void lookup()
        {
            // Setting false here will not do a lookup on all the data areas when the current data area value is blank.
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(CompanyInfo), this, false);

            sysTableLookup.addLookupfield(fieldNum(CompanyInfo, DataArea));
            sysTableLookup.setLabel("@SYS318577");
            sysTableLookup.addLookupfield(fieldNum(CompanyInfo, Name));

            Query query = TSTimesheetLine::buildQueryCompanyLookup();

            sysTableLookup.addSelectionField(fieldNum(CompanyInfo, DataArea));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, ProjName));
            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, activityTxt));
            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, custAccount));
            changeReasonsCollection.remove(tsTimesheetLine.RecId);
            tsTimesheetLine_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a customer lookup.
        /// </summary>
        public void lookup()
        {
            var query = TSTimesheetLine::buildQueryCustomer(tsTimesheetLine);

            var sysTableLookup = SysTableLookup::newParameters(tableNum(CustTable), this, true,
                    CustomerDataInteractorFactory::useExistingOrCreateResolver(this, query));

            sysTableLookup.addLookupfield(fieldNum(CustTable, AccountNum));
            sysTableLookup.addLookupfield(fieldNum(CustTable, Party));
            sysTableLookup.addLookupfield(fieldNum(CustTable, OurAccountNum));

            sysTableLookup.addSelectionField(fieldNum(CustTable, AccountNum));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///     View details of the customer.
        /// </summary>
        public void jumpRef()
        {
            super();
            CustAccount customerAccount = tsTimesheetLine.custAccount(false, null);

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(CustTable), CustTable::find(customerAccount));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return CustomerDataInteractorFactory::resolveAmbiguousReferenceForControl(this, TSTimesheetLine::buildQueryCustomer(tsTimesheetLine));
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.valueStr())
            {
                changecompany(TSTimesheetLine.ProjectDataAreaId)
                {
                    customerNameMap.insert(TSTimesheetLine.RecId, CustTable::find(this.valueStr()).name());
                }
            }
            else
            {
                if (customerNameMap.exists(TSTimesheetLine.RecId))
                {
                    customerNameMap.remove(TSTimesheetLine.RecId);
                }
            }

            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, ProjName));
            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, activityTxt));
            changeReasonsCollection.remove(tsTimesheetLine.RecId);
            tsTimesheetLine_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a project lookup.
        /// </summary>
        public void lookup()
        {
            Query query = TSTimesheetLine::buildQueryProjTable(tsTimesheetLine, custAccount.valueStr());

            if (cdsLockingOptionTimesheets)
            {
                QueryBuildDataSource qbds1 = query.dataSourceNo(1);
                QueryBuildDataSource qbds2 = qbds1.addDataSource(tableNum(ProjTable));
                qbds2.addLink(fieldNum(ProjProjectLookup, ProjId), fieldNum(ProjTable, ProjId));
                qbds2.joinMode(JoinMode::InnerJoin);
                qbds2.addRange(fieldNum(ProjTable, ProjDataSource)).value(SysQuery::value(0));
            }

            ProjTableLookup::createLookup(this, query).performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs required actions when the project is modified.
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean result = super();

            if (result)
            {
                result = element.validateProjectExternallyManaged(this.text());
            }

            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, custAccount));
            tsTimesheetLine_ds.cacheCalculateMethod(tableMethodStr(tsTimesheetLine, ProjName));
            changeReasonsCollection.remove(tsTimesheetLine.RecId);
            tsTimesheetLine_ds.refresh();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///     View details of the project.
        /// </summary>
        public void jumpRef()
        {
            super();

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(ProjTable), ProjTable::find(tstimesheetline.ProjId));
            }

            appl.setDefaultCompany(tsTimesheetLine.ProjectDataAreaId, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ActivityNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///     View details of the activity.
        /// </summary>
        public void jumpRef()
        {
            super();

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(smmActivities), smmActivities::find(tstimesheetline.ActivityNumber));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CatergoryName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup on the project category.
        /// </summary>
        public void lookup()
        {
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjCategory), this);

            sysTableLookup.addLookupfield(fieldNum(ProjCategory, CategoryId));
            sysTableLookup.addLookupfield(fieldNum(ProjCategory, Name));
            sysTableLookup.addLookupfield(fieldNum(ProjCategory, CategoryType));

            Query query = TSTimesheetLine::buildQueryProjCategory(tsTimesheetLine);

            sysTableLookup.addSelectionField(fieldNum(ProjCategory, CategoryId));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret;
            ProjActivity    projActivity;

            ret = super();

            if (TSTimesheetLine.ActivityNumber)
            {
                select firstonly crossCompany Mandatory, CategoryDefault from projActivity
                    where projActivity.ActivityNumber == TSTimesheetLine.ActivityNumber;

                if (projActivity.Mandatory && (TSTimesheetLine.CategoryId != projActivity.CategoryDefault))
                {
                    ret = checkFailed("@SYS81827");
                    TSTimesheetLine.CategoryId = projActivity.CategoryDefault;
                }
            }

            changeReasonsCollection.remove(tsTimesheetLine.RecId);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///     View details of the category.
        /// </summary>
        public void jumpRef()
        {
            super();

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(ProjCategory), ProjCategory::find(tstimesheetline.CategoryId));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_1</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_2</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_3</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_4</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_5</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_6</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineWeek_Hours_7</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs actions when the hours field gets focus.
        /// </summary>
        public void gotFocus()
        {
            super();
            element.SetFocusOnDayIndex(this.arrayIndex());
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// The hour content has changed, so, it may be necessary to enable or disable
        /// the internal and external comments accordingly.
        /// </summary>
        public void textChange()
        {
            super();
            element.enableComments(this.arrayIndex(), this.realValue());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLine_LinePropertyId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup on the line property.
        /// </summary>
        public void lookup()
        {
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjLineProperty), this);

            sysTableLookup.addLookupfield(fieldNum(ProjLineProperty, LinePropertyId));
            sysTableLookup.addLookupfield(fieldNum(ProjLineProperty, Name));

            Query query = TSTimesheetLine::buildQueryProjLineProperty(tsTimesheetLine);

            sysTableLookup.addSelectionField(fieldNum(ProjLineProperty, LinePropertyId));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///     View details of the line property.
        /// </summary>
        public void jumpRef()
        {
            super();

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(ProjLineProperty), ProjLineProperty::find(tstimesheetline.LinePropertyId));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            changeReasonsCollection.remove(tsTimesheetLine.RecId);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CommentsDayComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Sets the focus on the corresponding day when the value in the combobox is changed.
        /// </summary>
        /// <returns></returns>
        public int selectionChange()
        {
            int result = super();

            // combobox is zero basedm dayIndex is 1 based
            element.setFocusOnDayIndex(this.selection() + firstDayIndex);

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLine_TaxGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Views details of the tax group.
        /// </summary>
        public void jumpRef()
        {
            super();

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(TaxGroup), TaxGroupHeading::find(tsTimesheetLine.TaxGroupId));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup on the tax group.
        /// </summary>
        public void lookup()
        {
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(TaxGroupHeading), this);

            sysTableLookup.addLookupfield(fieldNum(TaxGroupHeading, TaxGroup));
            sysTableLookup.addLookupfield(fieldNum(TaxGroupHeading, TaxGroupName));

            Query query = TSTimesheetLine::buildQueryTaxGroupHeading(tsTimesheetLine);

            sysTableLookup.addSelectionField(fieldNum(TaxGroupHeading, TaxGroup));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLine_TaxItemGroup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Views details of the tax item group.
        /// </summary>
        public void jumpRef()
        {
            super();

            changecompany(tsTimesheetLine.ProjectDataAreaId)
            {
                element.viewDetailsJumpRef(menuitemDisplayStr(TaxItemGroup), TaxItemGroupHeading::find(tsTimesheetLine.TaxItemGroup));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup on the tax item group.
        /// </summary>
        public void lookup()
        {
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(TaxItemGroupHeading), this);

            sysTableLookup.addLookupfield(fieldNum(TaxItemGroupHeading, TaxItemGroup));
            sysTableLookup.addLookupfield(fieldNum(TaxItemGroupHeading, Name));

            Query query = TSTimesheetLine::buildQueryTaxItemGroupHeading(tsTimesheetLine);

            sysTableLookup.addSelectionField(fieldNum(TaxItemGroupHeading, TaxItemGroup));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetLineLog_ChangeReason</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lostFocus</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Updates the change reason when the field loses focus.
        /// </summary>
        public void lostFocus()
        {
            super();

            TSTimesheetLine_ds.changeReason(true, TSTimesheetLine, this.text());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Resource_HeaderDetails</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup on the resource.
        /// </summary>
        public Common lookupReference()
        {
            return TSResource::lookupDelegateResources(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the HcmWorker form for the resource
        /// </summary>
        public void jumpRef()
        {
            ResourceFacade::jumpRefToHcmWorker(TSTimesheetTable.Resource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PeriodDateRange_HeaderDetails</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup for the period dates.
        /// </summary>
        public void lookup()
        {
            element.performPeriodDateLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimesheetWeek_HeaderDetails</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Performs a lookup for the timesheet week.
        /// </summary>
        public void lookup()
        {
            element.performTimesheetLineWeekLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MyTimesheetFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>executeFilterQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the query based on the filter option.
        /// </summary>
        public void executeFilterQuery()
        {
            this.selectionChange();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            myTimesheetFilterSelection = this.selection();
            tsTimesheetEntryQuery.initializeQueryMyTimesheets(myTimesheetFilterSelection);
            tsTimesheetTable_ds.executeQuery();

            return myTimesheetFilterSelection;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetTable_Resource_GridView</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the HcmWorker form for the resource
        /// </summary>
        public void jumpRef()
        {
            ResourceFacade::jumpRefToHcmWorker(TSTimesheetTable.Resource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSTimesheetTable_Resource_Parent</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the HcmWorker form for the resource
        /// </summary>
        public void jumpRef()
        {
            ResourceFacade::jumpRefToHcmWorker(TSTimesheetTable.Resource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TSTimesheetTable</Name>
			<Table>TSTimesheetTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsWorkflowToBeResubmitted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPeriodId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPeriodTimesheetWeek</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SIGParentResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SIGParentWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimesheetNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TSTimesheetLine</Name>
			<Table>TSTimesheetLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityComplete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityRemaining</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApplyAction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproverList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCompanySalesCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPeriodTimesheetWeek</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimesheetNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TSFavorites</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WebTransaction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TSTimesheetLineWeek</Name>
			<Table>TSTimesheetLineWeek</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[1]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[2]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[3]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[4]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[5]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[6]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalComments[7]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[1]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[2]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[3]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[4]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[5]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[6]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hours[7]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[1]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[2]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[3]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[4]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[5]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[6]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalComments[7]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPeriodId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimesheetNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TSTimesheetLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TSTimesheetLine</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxInformation_IN</Name>
			<Table>TaxInformation_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Commissionarate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Division</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ECCNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseLTUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTIN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTTransNumSeqGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IECRegistrationNumberTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPrimary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManECCRegistrationNumberTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Range</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTaxRegistrationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>STCRegistrationNumberTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TIN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TraderECCRegistrationNumberTable</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TSTimesheetLineTaxExtensionIN</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TSTimesheetLineTaxExtensionIN</Name>
			<Table>TSTimesheetLineTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CompanyLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerTaxInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HSNCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ITCCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TSTimesheetLine</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TSTimesheetLine</JoinSource>
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<Caption xmlns="">@SYS190484</Caption>
		<DataSource xmlns="">TSTimesheetTable</DataSource>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">DetailsTransaction</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">DetailsFormTransaction</Style>
		<TitleDataSource xmlns="">TSTimesheetTable</TitleDataSource>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>NewGroup</Name>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CopyTimesheet</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<DataSource>TSTimesheetTable</DataSource>
										<MenuItemName>TSTimesheet_Copy</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS2055</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>MaintainGroup</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Delegates</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<FormViewOption>Grid</FormViewOption>
										<MenuItemName>TSTimesheetMyDelegates</MenuItemName>
										<OpenMode>Edit</OpenMode>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS184032</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Favorites</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>TSTimesheetMyFavorites</MenuItemName>
										<Primary>Yes</Primary>
										<SaveRecord>No</SaveRecord>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS95713</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS316703</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RelatedInfoGroup</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HourTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>TSTimesheetTable</DataSource>
										<MenuItemName>ProjTransEmpl</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS75774</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS323065</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Accounting</Name>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjLedgerTransVoucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>TSTimesheetTable</DataSource>
										<MenuItemName>ProjLedgerTransVoucher</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Primary>Yes</Primary>
										<Text>@SYS116039</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AccountingDistributionsDocumentView</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>TSTimesheetTable</DataSource>
										<MenuItemName>AccountingDistributionsDocumentView</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TSTimesheetPostSourceDocument</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>TSTimesheetTable</DataSource>
										<MenuItemName>TSTimesheetPostSourceDocument</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS314071</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroupManage</Name>
								<ElementPosition>1380525201</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacingMode>Fixed</VerticalSpacingMode>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>VersionList</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>TSTimesheetTable</DataSource>
										<MenuItemName>TSTableVersion</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS4005390</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS302689</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PrintReport</Name>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>MenuItemButton</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>TSTimesheetSignOff</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS91576</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PoliciesGroup</Name>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>EvaluatePolicies</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>TSEvaluatePolicies</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@Timesheet:EvaluatePolicies_Button_Text</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@Timesheet:Policy_Group_Caption</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS716</Caption>
						<DataSource>TSTimesheetTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>TimesheetTableWorkflowDropDialogButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>TSTimesheetTableWorkflowDropDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
								<CopyCallerQuery>Yes</CopyCallerQuery>
								<DataSource>TSTimesheetTable</DataSource>
								<MenuItemName>TSTimesheetWorkflowDropDialog</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Workflow</NormalImage>
							</AxFormControl>
						</Controls>
						<DataSource>TSTimesheetTable</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>NavigationListGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>TSTimesheetTable_TimesheetNbr</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TSTimesheetTable_TimesheetNbr</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>TimesheetNbr</DataField>
								<DataSource>TSTimesheetTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>TSTimesheetTable_Resource</Name>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>TSTimesheetTable</DataSource>
								<ReferenceField>Resource</ReferenceField>
								<ReplacementFieldGroup>AutoLookup</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TSTimesheetTable_Period</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayTimesheetPeriod</DataMethod>
								<DataSource>TSTimesheetTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TSTimesheetTable_TotalHours</Name>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<Alignment>Left</Alignment>
								<DataMethod>totalHours</DataMethod>
								<DataSource>TSTimesheetTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>TSTimesheetTable</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>PanelTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsPanel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Title</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HeaderTitle</Name>
										<AlignControl>No</AlignControl>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Border>None</Border>
										<ColorScheme>WindowsPalette</ColorScheme>
										<FontSize>11</FontSize>
										<ForegroundColor>DynTitleGreen</ForegroundColor>
										<Label>@SYS15378</Label>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>HeaderAndLinePanels</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>LinesPanelTabPage</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>LineViewTab</Name>
												<Type>Tab</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewHeaderDetailsTabPage</Name>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>LineViewHeaderGeneral</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>Resource_LineViewHeader</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>WorkerName_DirPerson_FK_NameCopy1</Name>
																				<DataRelationPath>Worker.DirPerson_FK</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																		</Controls>
																		<DataSource>TSTimesheetTable</DataSource>
																		<ReferenceField>Resource</ReferenceField>
																		<ReplacementFieldGroup>AutoLookup</ReplacementFieldGroup>
																	</AxFormControl>
																</Controls>
																<FrameType>None</FrameType>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>LineViewHeaderDates</Name>
																<Type>Group</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>PeriodDateRange_LineViewHeader</Name>
																		<AllowEdit>No</AllowEdit>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1073741822</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<ExtendedDataType>TSTimesheetPeriod</ExtendedDataType>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TimesheetWeek_LineViewHeader</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1610612733</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<ExtendedDataType>TSTimesheetWeekPeriod</ExtendedDataType>
																		<LookupButton>Always</LookupButton>
																		<LookupOnly>Yes</LookupOnly>
																		<ViewEditMode>Edit</ViewEditMode>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>LineViewHeaderSummary</Name>
																<Type>Group</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>TSTimesheetTable_ApprovalStatus_LineViewHeader</Name>
																		<Type>ComboBox</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ApprovalStatus</DataField>
																		<DataSource>TSTimesheetTable</DataSource>
																		<FastTabSummary>Yes</FastTabSummary>
																		<ViewEditMode>View</ViewEditMode>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>totalHours_LineViewHeader</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Enabled>No</Enabled>
																		<Type>Real</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>timesheetTotalHours</DataMethod>
																		<DataSource>TSTimesheetTable</DataSource>
																		<Label>@SYS333677</Label>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@SYS15311</Caption>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewLines</Name>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>ActionStrip</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>ActionPane</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormActionPaneTabControl">
																		<Name>ActionPaneTab_LineView</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ActionPaneTab</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonGroupControl">
																				<Name>LineWorkflowButtonGroup</Name>
																				<ElementPosition>1431655764</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<Left>0</Left>
																				<Type>ButtonGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormButtonControl">
																						<Name>NewLine</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>441869062</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<NeededPermission>Create</NeededPermission>
																						<Type>Button</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<NormalImage>Add</NormalImage>
																						<Text>@SYS59247</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>DeleteLine</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>618616686</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<NeededPermission>Delete</NeededPermission>
																						<Type>MenuFunctionButton</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<AutoRefreshData>Yes</AutoRefreshData>
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<DataSource>TSTimesheetLine</DataSource>
																						<MenuItemName>TSDeleteCurrentRecordAction</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<MultiSelect>Yes</MultiSelect>
																						<NeedsRecord>Yes</NeedsRecord>
																						<NormalImage>Delete</NormalImage>
																						<SaveRecord>No</SaveRecord>
																						<Text>@SYS311855</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormButtonControl">
																						<Name>DeleteLineButton</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>795364310</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<NeededPermission>Delete</NeededPermission>
																						<Type>Button</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<MultiSelect>No</MultiSelect>
																						<NormalImage>Delete</NormalImage>
																						<SaveRecord>No</SaveRecord>
																						<Text>@SYS311855</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormButtonControl">
																						<Name>StartStopTime</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1325607186</ElementPosition>
																						<Enabled>No</Enabled>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>Button</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<AutoRefreshData>Yes</AutoRefreshData>
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<MultiSelect>No</MultiSelect>
																						<NeedsRecord>Yes</NeedsRecord>
																						<NormalImage>Timer</NormalImage>
																						<Text>@SYS333672</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuButtonControl">
																						<Name>CopyFrom</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1546541717</ElementPosition>
																						<Enabled>No</Enabled>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>MenuButton</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<Controls>
																							<AxFormControl xmlns=""
																								i:type="AxFormMenuFunctionButtonControl">
																								<Name>CopyFromTimesheet</Name>
																								<ElementPosition>858993458</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>MenuFunctionButton</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<ButtonDisplay>TextOnly</ButtonDisplay>
																								<DataSource>TSTimesheetTable</DataSource>
																								<MenuItemName>TSTimesheetEntryCopy</MenuItemName>
																								<Text>@SYS15311</Text>
																							</AxFormControl>
																							<AxFormControl xmlns=""
																								i:type="AxFormMenuFunctionButtonControl">
																								<Name>MyFavorites</Name>
																								<AutoDeclaration>Yes</AutoDeclaration>
																								<ElementPosition>1288490187</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>MenuFunctionButton</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<ButtonDisplay>TextOnly</ButtonDisplay>
																								<DataSource>TSTimesheetTable</DataSource>
																								<MenuItemName>TSTimesheetCreateLinesFromFavorites</MenuItemName>
																								<MenuItemType>Action</MenuItemType>
																							</AxFormControl>
																							<AxFormControl xmlns=""
																								i:type="AxFormMenuFunctionButtonControl">
																								<Name>AssignedActivities</Name>
																								<AutoDeclaration>Yes</AutoDeclaration>
																								<ElementPosition>1717986916</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>MenuFunctionButton</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<ButtonDisplay>TextOnly</ButtonDisplay>
																								<DataSource>TSTimesheetTable</DataSource>
																								<MenuItemName>TSTimesheetCreateLinesFromActivities</MenuItemName>
																								<MenuItemType>Action</MenuItemType>
																								<Text>@SYS80292</Text>
																							</AxFormControl>
																						</Controls>
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<NormalImage>Copy</NormalImage>
																						<Text>@SYS68297</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>TSTimesheetAddFavorites</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1767476249</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>MenuFunctionButton</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<DataSource>TSTimesheetLine</DataSource>
																						<MenuItemName>TSTimesheetAddFavorites</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<MultiSelect>Yes</MultiSelect>
																						<NeedsRecord>Yes</NeedsRecord>
																						<NormalImage>Save</NormalImage>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormButtonControl">
																						<Name>SaveToFavorites</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1988410782</ElementPosition>
																						<Enabled>No</Enabled>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>Button</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<Visible>No</Visible>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<AutoRefreshData>Yes</AutoRefreshData>
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<MultiSelect>Yes</MultiSelect>
																						<NormalImage>Save</NormalImage>
																						<Text>@SYS333668</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormDropDialogButtonControl">
																						<Name>TSTimesheetLineWorkflowDropDialog</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>DropDialogButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<DataSource>TSTimesheetLine</DataSource>
																						<MenuItemName>TSTimesheetWorkflowDropDialog</MenuItemName>
																						<NeedsRecord>Yes</NeedsRecord>
																						<NormalImage>Workflow</NormalImage>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>TransTaxInformation</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<Visible>No</Visible>
																						<FormControlExtension
																							i:nil="true" />
																						<DataSource>TSTimesheetLine</DataSource>
																						<MenuItemName>TransTaxInformation</MenuItemName>
																						<NeedsRecord>Yes</NeedsRecord>
																					</AxFormControl>
																				</Controls>
																				<DataSource>TSTimesheetLine</DataSource>
																			</AxFormControl>
																		</Controls>
																		<AlignChild>No</AlignChild>
																		<AlignChildren>No</AlignChildren>
																		<ArrangeMethod>Vertical</ArrangeMethod>
																		<DataSource>TSTimesheetLine</DataSource>
																	</AxFormControl>
																</Controls>
																<AlignChild>No</AlignChild>
																<AlignChildren>No</AlignChildren>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<DataSource>TSTimesheetLine</DataSource>
																<Style>Strip</Style>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>LineGrid</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1610612734</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Grid</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGroupControl">
																		<Name>lineGridGroup</Name>
																		<HeightMode>Auto</HeightMode>
																		<Type>Group</Type>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormImageControl">
																				<Name>LineGridWorkflowImage</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Height>20</Height>
																				<HeightMode>Manual</HeightMode>
																				<Type>Image</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>workflowIcon</DataMethod>
																				<DataSource>TSTimesheetLine</DataSource>
																				<Label>@Proj:WorkflowIcon</Label>
																				<ShowLabel>No</ShowLabel>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>TSTimesheetLine_ProjectDataAreaId</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>178956968</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ChangeCase>UpperCase</ChangeCase>
																				<DataField>ProjectDataAreaId</DataField>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>4</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>CustAccount</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>307073889</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>0</Width>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>custAccount</DataMethod>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>10</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<Label>@SYS302</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>CustName</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>String</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>customerName</DataMethod>
																				<DataSource>TSTimesheetLine</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ProjId</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>String</Type>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ProjId</DataField>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>10</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ProjName</Name>
																				<Type>String</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>projName</DataMethod>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>20</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ActivityNumber</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>String</Type>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ActivityNumber</DataField>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>10</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ActivityTxt</Name>
																				<Type>String</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>activityTxt</DataMethod>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>20</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<Label>@SYS38381</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>CatergoryName</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>String</Type>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>CategoryId</DataField>
																				<DataSource>TSTimesheetLine</DataSource>
																				<DisplayLength>10</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_1</Name>
																				<ElementPosition>828082702</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>1</ArrayIndex>
																				<DataField>Hours[1]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_2</Name>
																				<ElementPosition>959046666</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>2</ArrayIndex>
																				<DataField>Hours[2]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_3</Name>
																				<ElementPosition>1090010630</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>3</ArrayIndex>
																				<DataField>Hours[3]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_4</Name>
																				<ElementPosition>1220974594</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>4</ArrayIndex>
																				<DataField>Hours[4]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_5</Name>
																				<ElementPosition>1351938558</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>5</ArrayIndex>
																				<DataField>Hours[5]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_6</Name>
																				<ElementPosition>1482902522</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>6</ArrayIndex>
																				<DataField>Hours[6]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TSTimesheetLineWeek_Hours_7</Name>
																				<ElementPosition>1613866486</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ArrayIndex>7</ArrayIndex>
																				<DataField>Hours[7]</DataField>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>LineTotal</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1744830452</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>50</Width>
																				<WidthMode>Manual</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>totalHours</DataMethod>
																				<DataSource>TSTimesheetLineWeek</DataSource>
																				<DisplayLength>6</DisplayLength>
																				<DisplayLengthMode>Fixed</DisplayLengthMode>
																				<Label>@SYS58659</Label>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>TSTimesheetLine_LinePropertyId</Name>
																				<ElementPosition>1879048181</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Width>70</Width>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>LinePropertyId</DataField>
																				<DataSource>TSTimesheetLine</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>TSTimesheetLine_ApprovalStatus</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1968526669</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ApprovalStatus</DataField>
																				<DataSource>TSTimesheetLine</DataSource>
																				<Items />
																			</AxFormControl>
																		</Controls>
																	</AxFormControl>
																</Controls>
																<DataSource>TSTimesheetLine</DataSource>
																<Style>Tabular</Style>
																<VisibleRows>5</VisibleRows>
																<VisibleRowsMode>Fixed</VisibleRowsMode>
															</AxFormControl>
														</Controls>
														<Caption>@SYS339037</Caption>
														<DataSource>TSTimesheetLine</DataSource>
														<FastTabExpanded>Always</FastTabExpanded>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewLineDetails</Name>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormTabControl">
																<Name>LineDetailsTab</Name>
																<AlignControl>No</AlignControl>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Tab</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormTabPageControl">
																		<Name>CommentsTabPage</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>715827882</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Pattern>FieldsFieldGroups</Pattern>
																		<PatternVersion>1.1</PatternVersion>
																		<Type>TabPage</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormGroupControl">
																				<Name>LineViewDetailsCommentsDate</Name>
																				<Type>Group</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormComboBoxControl">
																						<Name>CommentsDayComboBox</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>858993458</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>ComboBox</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<Label>@SYS4569</Label>
																						<ViewEditMode>Edit</ViewEditMode>
																						<Items />
																					</AxFormControl>
																				</Controls>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormGroupControl">
																				<Name>LineViewDetailsCommentsInternal</Name>
																				<Type>Group</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>TSTimesheetLineWeek_InternalComments</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1431655764</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InternalComments[1]</DataField>
																						<DataSource>TSTimesheetLineWeek</DataSource>
																					</AxFormControl>
																				</Controls>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormGroupControl">
																				<Name>LineViewDetailsCommentsExternal</Name>
																				<Type>Group</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>TSTimesheetLineWeek_ExternalComments</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1431655764</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>ExternalComments[1]</DataField>
																						<DataSource>TSTimesheetLineWeek</DataSource>
																					</AxFormControl>
																				</Controls>
																			</AxFormControl>
																		</Controls>
																		<ColumnsMode>Fill</ColumnsMode>
																		<HideIfEmpty>No</HideIfEmpty>
																		<Caption>@SYS5343</Caption>
																		<DataSource>TSTimesheetLine</DataSource>
																		<Scrollbars>Auto</Scrollbars>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormTabPageControl">
																		<Name>General</Name>
																		<ElementPosition>1073741823</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Pattern>FieldsFieldGroups</Pattern>
																		<PatternVersion>1.1</PatternVersion>
																		<Type>TabPage</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormGroupControl">
																				<Name>Billing</Name>
																				<ElementPosition>1431655764</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<Type>Group</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormRealControl">
																						<Name>TSTimesheetLineWeek_SalesPrice</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>536870910</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>Real</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>SalesPrice</DataField>
																						<DataSource>TSTimesheetLineWeek</DataSource>
																						<NoOfDecimals>-1</NoOfDecimals>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>TSTimesheetLine_CurrencyCode</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>805306365</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>CurrencyCode</DataField>
																						<DataSource>TSTimesheetLine</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>TSTimesheetLine_TaxGroupId</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1252698792</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<DataMethod>editTaxGroup</DataMethod>
																						<DataSource>TSTimesheetLine</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>TSTimesheetLine_TaxItemGroup</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1700091219</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<FormControlExtension
																							i:nil="true" />
																						<DataMethod>editTaxItemGroup</DataMethod>
																						<DataSource>TSTimesheetLine</DataSource>
																					</AxFormControl>
																				</Controls>
																				<Caption>@SYS333675</Caption>
																			</AxFormControl>
																		</Controls>
																		<ColumnsMode>Fill</ColumnsMode>
																		<Caption>@SYS114913</Caption>
																		<Scrollbars>Auto</Scrollbars>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormTabPageControl">
																		<Name>Dimensions</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Pattern>DimensionEntryControl</Pattern>
																		<PatternVersion>1.1</PatternVersion>
																		<Type>TabPage</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormContainerControl">
																				<Name>DimensionEntryControl</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>Container</Type>
																				<WidthMode>SizeToAvailable</WidthMode>
																				<FormControlExtension>
																					<Name>DimensionEntryControl</Name>
																					<ExtensionComponents />
																					<ExtensionProperties>
																						<AxFormControlExtensionProperty>
																							<Name>parmControllerClassName</Name>
																							<Type>ExtendedDataType</Type>
																							<TypeName>ClassName</TypeName>
																						</AxFormControlExtensionProperty>
																						<AxFormControlExtensionProperty>
																							<Name>parmControlLabelText</Name>
																							<Type>String</Type>
																							<Value>@SYS138487</Value>
																						</AxFormControlExtensionProperty>
																						<AxFormControlExtensionProperty>
																							<Name>parmEnumerationName</Name>
																							<Type>String</Type>
																						</AxFormControlExtensionProperty>
																						<AxFormControlExtensionProperty>
																							<Name>parmDataSourceName</Name>
																							<Type>String</Type>
																							<Value>TSTimesheetLine</Value>
																						</AxFormControlExtensionProperty>
																						<AxFormControlExtensionProperty>
																							<Name>parmValueSetReferenceField</Name>
																							<Type>String</Type>
																							<Value>DefaultDimension</Value>
																						</AxFormControlExtensionProperty>
																						<AxFormControlExtensionProperty>
																							<Name>parmEnumValueSetReferenceField</Name>
																							<Type>String</Type>
																						</AxFormControlExtensionProperty>
																					</ExtensionProperties>
																				</FormControlExtension>
																				<Controls />
																			</AxFormControl>
																		</Controls>
																		<HideIfEmpty>No</HideIfEmpty>
																		<Caption>@SYS138491</Caption>
																		<FastTabExpanded>No</FastTabExpanded>
																		<Scrollbars>Auto</Scrollbars>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormTabPageControl">
																		<Name>ChangeReasonTabPage</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Pattern>FieldsFieldGroups</Pattern>
																		<PatternVersion>1.1</PatternVersion>
																		<Type>TabPage</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>TSTimesheetLineLog_ChangeReason</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1431655764</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>ChangeReason</DataMethod>
																				<DataSource>TSTimesheetLine</DataSource>
																				<Label>@SYS4006054</Label>
																			</AxFormControl>
																		</Controls>
																		<ColumnsMode>Fill</ColumnsMode>
																		<Caption>@SYS4006054</Caption>
																		<DataSource>TSTimesheetLine</DataSource>
																		<Scrollbars>Auto</Scrollbars>
																	</AxFormControl>
																</Controls>
																<AlignChild>No</AlignChild>
																<ArrangeMethod>Vertical</ArrangeMethod>
															</AxFormControl>
														</Controls>
														<Caption>@SYS23823</Caption>
														<DataSource>TSTimesheetLine</DataSource>
														<FastTabExpanded>Yes</FastTabExpanded>
													</AxFormControl>
												</Controls>
												<Style>FastTabs</Style>
											</AxFormControl>
										</Controls>
										<PanelStyle>DetailsLine</PanelStyle>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>HeaderPanelTabPage</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>HeaderDetailsTab</Name>
												<Type>Tab</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>HeaderDetailsTabPage</Name>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>HeaderDetailsGeneral</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>Resource_HeaderDetails</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>WorkerName_DirPerson_FK_Name</Name>
																				<DataRelationPath>Worker.DirPerson_FK</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																		</Controls>
																		<DataSource>TSTimesheetTable</DataSource>
																		<ReferenceField>Resource</ReferenceField>
																		<ReplacementFieldGroup>AutoLookup</ReplacementFieldGroup>
																	</AxFormControl>
																</Controls>
																<FrameType>None</FrameType>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>HeaderDetailsDates</Name>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>PeriodDateRange_HeaderDetails</Name>
																		<AllowEdit>No</AllowEdit>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1073741822</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<ExtendedDataType>TSTimesheetPeriod</ExtendedDataType>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TimesheetWeek_HeaderDetails</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1610612733</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<ExtendedDataType>TSTimesheetWeekPeriod</ExtendedDataType>
																		<LookupButton>Always</LookupButton>
																		<LookupOnly>Yes</LookupOnly>
																		<ViewEditMode>Edit</ViewEditMode>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>HeaderDetailsSummary</Name>
																<Type>Group</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>TSTimesheetTable_ApprovalStatus_HeaderDetails</Name>
																		<Type>ComboBox</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ApprovalStatus</DataField>
																		<DataSource>TSTimesheetTable</DataSource>
																		<ViewEditMode>View</ViewEditMode>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>totalHours_HeaderDetails</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Enabled>No</Enabled>
																		<Type>Real</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>timesheetTotalHours</DataMethod>
																		<DataSource>TSTimesheetTable</DataSource>
																		<Label>@SYS333677</Label>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@SYS15311</Caption>
													</AxFormControl>
												</Controls>
												<Style>FastTabs</Style>
											</AxFormControl>
										</Controls>
										<PanelStyle>DetailsHeader</PanelStyle>
									</AxFormControl>
								</Controls>
								<ShowTabs>No</ShowTabs>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Scrollbars>Auto</Scrollbars>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GridPanel</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustomFilterGroup</Name>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>CustomFilterQuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>GridView</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>TSTimesheetTable_TimesheetNbr_GridView</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>MyTimesheetFilter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<EnumType>TSTimesheetListPageFilter</EnumType>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridView</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TSTimesheetTable_TimesheetNbr_GridView</Name>
										<Type>String</Type>
										<Width>130</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TimesheetNbr</DataField>
										<DataSource>TSTimesheetTable</DataSource>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TSTimesheetTable_Resource_GridView</Name>
										<Type>ReferenceGroup</Type>
										<Width>220</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>TSTimesheetTable</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>AutoLookup</ReplacementFieldGroup>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TSTimesheetTable_Resource_Parent</Name>
										<Type>ReferenceGroup</Type>
										<Width>220</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>TSTimesheetTable</DataSource>
										<Label>Supervisor</Label>
										<ReferenceField>SIGParentResource</ReferenceField>
										<ReplacementFieldGroup>AutoLookup</ReplacementFieldGroup>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>TSTimesheetTable_PeriodFrom_GridView</Name>
										<Type>Date</Type>
										<Width>130</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodFrom</DataField>
										<DataSource>TSTimesheetTable</DataSource>
										<Label>@SYS428</Label>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>TSTimesheetTable_PeriodTo_GridView</Name>
										<Type>Date</Type>
										<Width>130</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodTo</DataField>
										<DataSource>TSTimesheetTable</DataSource>
										<Label>@SYS50115</Label>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TSTimesheetTable_ApprovalStatus_GridView</Name>
										<Type>ComboBox</Type>
										<Width>130</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovalStatus</DataField>
										<DataSource>TSTimesheetTable</DataSource>
										<ViewEditMode>View</ViewEditMode>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TSTimesheetTabke_TotalHours_GridView</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>130</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>totalHours</DataMethod>
										<DataSource>TSTimesheetTable</DataSource>
										<Label>@SYS333677</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TSTimesheetTable</DataSource>
								<DefaultAction>MainDefaultAction</DefaultAction>
								<DefaultActionLabel>View Details</DefaultActionLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>MainDefaultAction</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>TSTimesheetEntryTotalsPart</Name>
			<DataSource>TSTimesheetTable</DataSource>
			<ElementPosition>1073741823</ElementPosition>
			<IsLinked>Yes</IsLinked>
			<MenuItemName>TSTimesheetEntryTotalsPart</MenuItemName>
		</AxFormPartReference>
	</Parts>
</AxForm>